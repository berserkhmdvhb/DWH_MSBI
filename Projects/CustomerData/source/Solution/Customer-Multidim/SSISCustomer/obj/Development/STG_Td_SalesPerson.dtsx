<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/3/2024 7:38:31 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FR-GZMRLS3"
  DTS:CreatorName="AzureAD\HamedVAHEB"
  DTS:DTSID="{75CC3C54-65DC-4C76-8208-E5E0EEE31942}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="STG_Td_Product"
  DTS:PackageType="5"
  DTS:VersionBuild="273"
  DTS:VersionGUID="{C70CF7A7-A7B4-4EC8-AD59-863C340B1D23}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV_SalesPerson]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A4BC1761-5AB6-48A3-B71D-D2DC92E7012A}"
      DTS:ObjectName="CSV_SalesPerson">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::V_PathFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\Dimensions\SalesPerson\test.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PersonID"
              DTS:DTSID="{91E33C70-A482-4098-AB06-E51822F60FEC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PersonName"
              DTS:DTSID="{53D787B8-7C43-40DA-813F-FA5C83B59547}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PersonBossID"
              DTS:DTSID="{053BD8AC-E827-45CE-9CAF-3EEFD528EA38}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1DA52816-892D-4C81-A838-1530781E708D}"
      DTS:ObjectName="PK_PathDir">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\Dimensions\SalesPerson</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{019E7276-068F-469B-86A9-42A27F807A1B}"
      DTS:ObjectName="PK_Schema">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">stg</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{46802CB5-DC5D-4DCD-AC21-34D75EA9D3C6}"
      DTS:ObjectName="PK_SourceContext">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Dimension - SalesPerson</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6EFDAD93-0938-412D-9A7D-B0B48EE36B57}"
      DTS:ObjectName="PK_SourceID">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Dims</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{AACC1ABD-0658-47D3-B56D-86728D6AE24E}"
      DTS:ObjectName="PK_TableName_D">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Td_SalesPerson</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A88ED6B-CE9A-4C96-A7BF-F2AE64C8C4A2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_FileName">
      <DTS:VariableValue
        DTS:DataType="8">test.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{575613C1-1745-4A4C-B8F0-02E1A29DE2C5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + &quot;\\&quot; + @[User::V_FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\Dimensions\SalesPerson\test.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D416ABC-916C-42E1-BCF6-712050EAC5C1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + @[$Project::PR_PathFolder_Rejected] + &quot;\\&quot; +&#xA;REPLACE(&#xA;    @[User::V_FileName], &#xA;    &quot;.&quot; + RIGHT(@[User::V_FileName], LEN(@[User::V_FileName]) - FINDSTRING(@[User::V_FileName], &quot;.&quot;, 1)),&#xA;    &quot;@&quot;&#xA;) +&#xA;SUBSTRING((DT_WSTR, 50) GETDATE(), 1, 4) + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) MONTH(GETDATE()), 2) +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DAY(GETDATE()), 2) + &quot;_&quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;hh&quot;, GETDATE()), 2) + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;mi&quot;, GETDATE()), 2) + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;ss&quot;, GETDATE()), 2) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile_Archive_Fail">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\Dimensions\SalesPerson\Rejected\test@20250108_205501.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA3FEE7C-B188-4818-927C-6D986EAB66DD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + @[$Project::PR_PathFolder_Processed] + &quot;\\&quot; +&#xA;REPLACE(&#xA;    @[User::V_FileName], &#xA;    &quot;.&quot; + RIGHT(@[User::V_FileName], LEN(@[User::V_FileName]) - FINDSTRING(@[User::V_FileName], &quot;.&quot;, 1)),&#xA;    &quot;@&quot;&#xA;) +&#xA;SUBSTRING((DT_WSTR, 50) GETDATE(), 1, 4) + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) MONTH(GETDATE()), 2) +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DAY(GETDATE()), 2) + &quot;_&quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;hh&quot;, GETDATE()), 2) + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;mi&quot;, GETDATE()), 2) + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;ss&quot;, GETDATE()), 2) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile_Archive_Success">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\Dimensions\SalesPerson\Processed\test@20250108_205501.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2105E6C5-8AEC-46D7-AEA1-4FCF4E3980B3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::PR_PathDir_Root] + &quot;\\&quot; + @[$Project::ENV] +  &quot;\\&quot; + &quot;Input&quot; +  @[$Package::PK_PathDir]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFolder_Full">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\Dimensions\SalesPerson</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CF4DE131-C5A2-438C-8E58-035611D361A0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::PR_PathDir_Root] + &quot;\\&quot; + &quot;UAT&quot; +  &quot;\\&quot; + &quot;Input&quot; +  @[$Package::PK_PathDir]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFolder_Full_UAT">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\UAT\Input\Dimensions\SalesPerson</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59651532-820B-41B0-84A0-E5B13967FD92}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="V_RowCount_Errors">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{AB9A4780-BE6A-488B-9E03-C0805ABC6418}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{52DDD17E-E530-471C-B865-005F1EA2346D}"
        DTS:ObjectName="{52DDD17E-E530-471C-B865-005F1EA2346D}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::V_PathFolder_Full]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\Dimensions\SalesPerson" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archive File Failure"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{6DFAC042-804D-4115-8F0E-52A6E23B41DF}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File Failure"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="RenameFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::V_PathFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::V_PathFile_Archive_Fail"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archive File Success"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{919DEB38-1B4A-4E47-83E3-7D6B4A65A2CF}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File Success"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="RenameFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::V_PathFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::V_PathFile_Archive_Success"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archive File Success 2"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{4d71d884-e04b-44b7-91be-833affbeb7c9}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File Success 2"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="RenameFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::V_PathFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::V_PathFile_Archive_Success"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Check Errors"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5BD8C9DE-E113-4324-A152-0C1EE0C9CDA0}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check Errors"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Warning Log Metadata"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[$Package::PK_SourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[$Package::PK_SourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="23"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]"
                          name="SourceContext"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[$Package::PK_SourceContext]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[$Package::PK_SourceContext]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                          name="CreatedBy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[System::PackageID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                          name="ModifiedBy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[System::PackageID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                          name="CreatedDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[System::StartTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[System::StartTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceObject]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceObject]"
                          name="SourceObject"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,255)@[User::V_FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,255)@[User::V_FileName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Build JSON Parameter"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Initialize the JSON builder
        StringBuilder jsonBuilder = new StringBuilder();
        jsonBuilder.Append("[");

        // Add ErrorCode as the first key-value pair
        jsonBuilder.Append("{\"Key\":\"ErrorCode\",\"Value\":\"" + Row.ErrorCode.ToString() + "\"}");

        // Dynamically process all input columns
        foreach (IDTSInputColumn100 column in ComponentMetaData.InputCollection[0].InputColumnCollection)
        {
            // Skip ErrorCode as it's already handled
            if (column.Name == "ErrorCode") continue;

            // Get column name and value
            string columnName = column.Name;
            var columnValue = Row.GetType().GetProperty(columnName).GetValue(Row, null);

            // Handle null values
            string columnValueString = columnValue == null ? "NULL" : columnValue.ToString();

            // Append the column name and value to the JSON
            jsonBuilder.Append(",{\"Key\":\"" + columnName + "\",\"Value\":\"" + columnValueString + "\"}");
        }

        jsonBuilder.Append("]");

        // Assign the generated JSON to the JSONParam output column
        Row.JSONParam = jsonBuilder.ToString();
    }


}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PersonID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool PersonID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String PersonName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool PersonName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String PersonBossID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool PersonBossID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[4]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String JSONParam
    {
        set
        {
            this[5] = value;
        }
    }
    public bool JSONParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_674d8634bba24d45b15b40bd21500670.Properties.Settings.get_Default():SC_674d8634bba24d45b15b40bd21500670.Properties.Sett" +
    "ings")]

namespace SC_674d8634bba24d45b15b40bd21500670.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_674d8634bba24d45b15b40bd21500670.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d737a0fc-1f41-4c99-ad97-b377f5254d5b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_674d8634bba24d45b15b40bd21500670</RootNamespace>
    <AssemblyName>SC_674d8634bba24d45b15b40bd21500670</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_674d8634bba24d45b15b40bd21500670" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_674d8634bba24d45b15b40bd21500670</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_674d8634bba24d45b15b40bd21500670</msb:DisplayName>
    <msb:ProjectId>{C49DFF1E-C42A-45FF-A25B-BD2D68ACFE2E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_674d8634bba24d45b15b40bd21500670.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_674d8634bba24d45b15b40bd21500670")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_674d8634bba24d45b15b40bd21500670")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_674d8634bba24d45b15b40bd21500670.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_674d8634bba24d45b15b40bd21500670.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_674d8634bba24d45b15b40bd21500670.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_674d8634bba24d45b15b40bd21500670.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_674d8634bba24d45b15b40bd21500670.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_674d8634bba24d45b15b40bd21500670.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMP6U2cAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAOjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOg3AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAQBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAc
OAAAAAAAAEgAAAACAAUASCMAAOgTAAABAAAAAAAAADA3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAGgEAAAEAABFzEgAACgoG
cgEAAHBvEwAACiYGcgUAAHADbwwAAAYLEgEoFAAACnI/AABwKBUAAApvEwAACiYCKBYAAApvFwAA
ChaMHgAAAW8YAAAKbxkAAApvGgAACgw4hAAAAAhvGwAACnQQAAABDQlvHAAACnJFAABwKB0AAAot
ZglvHAAAChMEA28eAAAKEQRvHwAACgMUbyAAAAoTBREFLAkRBW8hAAAKKwVyWQAAcBMGBhuNHwAA
ASUWcmMAAHCiJRcRBKIlGHJ3AABwoiUZEQaiJRpyPwAAcKIoIgAACm8TAAAKJghvIwAACjpx////
3hQIdRIAAAETBxEHLAcRB28kAAAK3AZyjwAAcG8TAAAKJgMGbyEAAApvEAAABioAAAEQAAACAFcA
lu0AFAAAAAAeAigUAAAGKioCAwQFKCUAAAoqUgJ7JgAACgJ7JwAAChaUbygAAAoqIgIWKCkAAAoq
UgJ7JgAACgJ7JwAACheUbygAAAoqIgIXKCkAAAoqUgJ7JgAACgJ7JwAAChiUbygAAAoqIgIYKCkA
AAoqUgJ7JgAACgJ7JwAAChmUbyoAAAoqIgIZKCkAAAoqUgJ7JgAACgJ7JwAAChqUbyoAAAoqIgIa
KCkAAAoqJgIbAygrAAAKKloDLAgCGygsAAAKKnKTAABwcy0AAAp6HgIoLgAACioeAigvAAAKKn4C
KDAAAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRyMAEAcBpvMQAACiwVAgUCAygyAAAKDgRz
BQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKDMAAAoCA30DAAAEKjoCKDMAAAoCA30E
AAAEKh4CKDMAAAoqrn4FAAAELR5yQAEAcNAHAAACKDQAAApvNQAACnM2AAAKgAUAAAR+BQAABCoa
fgYAAAQqHgKABgAABCoafgcAAAQqHgIoNwAACioucx8AAAaABwAABCpCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAAAEBwAAI34AAHAHAACkCAAAI1N0cmluZ3MAAAAAFBAAALQBAAAj
VVMAyBEAABAAAAAjR1VJRAAAANgRAAAQAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAW
AAABAAAAKQAAAAgAAAAHAAAAIAAAAA8AAAA3AAAAEAAAAAEAAAADAAAADwAAABAAAAABAAAABQAA
AAEAAAAAAO0DAQAAAAAABgDSAoYGBgBmA4YGBgAeAnMGDwD6BgAABgBLAhgFBgC1AhgFBgCWAhgF
BgBNAxgFBgDyAhgFBgALAxgFBgBiAhgFBgB9AqoDCgAmA2ABBgDYBVEIBgBMBncHDgAaACMGBgCd
B8AEBgAOAcAECgACBmABEgDzBWABCgCcBWABCgDaB2ABBgABAnMGBgATBqYGBgCDBQMFFgDRAdcD
FgAyAtcDFgCxAe4EBgDmAYYGBgCVAMAEBgDQA8AEDgABACMGDgBKACMGDgBhACMGDgAtACMGBgCE
AcAEBgCPBRgFBgBYBcAEBgByBcAEBgAaAcAEBgCACBgFAAAAAJsAAAAAAAEAAQABABAA0wQAABAA
AQABAAEAEADmBQAATQABAAUAAQAQALwHAABZAAEAFAABABAAigcAAEUAAwAYAAEAEAA4BwAARQAE
ABkAAAAQAK0GCQdFAAUAGgAAARAAZwcJB3EABwAeAAYAigffAAYAOAfjAAEAygfnAAEAygfnABEA
xwTrABEAoQHvABEA8ADzAFAgAAAAAMYAhAMGAAEAWCAAAAAAxgCPAwYAAQBgIAAAAADGAF0I9wAB
AJghAAAAAIYYZgYGAAIAoCEAAAAAhhhmBoEAAgCrIQAAAACGCKQAMAAFAMAhAAAAAIYIFQR9AAUA
ySEAAAAAhghHATAABQDeIQAAAACGCFYEfQAFAOchAAAAAIYIsQAwAAUA/CEAAAAAhggpBH0ABQAF
IgAAAACGCAAB/QAFABoiAAAAAIYIQQR9AAUAIyIAAAAAhgjeBP0ABQA4IgAAAACGCIEEfQAFAEEi
AAAAAIYIoAQQAAUASyIAAAAAhghsBAEBBgBiIgAAAACGAHQIfQAHAGoiAAAAAIYApAd9AAcAciIA
AAAAhhhmBgYABwCSIgAAAADGADsIBgEHALciAAAAAMYBNAj3AAsAyiIAAAAAxgFdCPcADADMIgAA
AACGGGYGEAENANsiAAAAAIYYZgYQAQ4A6iIAAAAAgxhmBgYADwDyIgAAAACTCA8GFgEPAB4jAAAA
AJMIiQEbAQ8AJSMAAAAAkwiVASABDwAtIwAAAACWCLAHJgEQADQjAAAAAIYYZgYGABAAPCMAAAAA
kRhsBisBEAAAAAEAeAgAAAEACAYAAAIAQgcAAAMAqgUAAAEApAMAAAEApAMAAAEAwgAAAAIAVgEA
AAMACAYAAAQAqgUAAAEACAYAAAEAeAgAAAEA4AcAAAEA4AcAAAEApAMJAGYGAQARAGYGBgAZAGYG
CgApAGYGEAAxAGYGEAA5AGYGEABBAGYGEABJAGYGEABRAGYGEABZAGYGEABhAGYGEABpAGYGBgC5
AGYGBgDZAGYGFQDpAGYGBgCxAIQDBgCxAI8DBgBxAGYGBgBxAOkAKgDxAMQDMAD5AJYHNACxAMoA
OwABAUQFQQAJAa4ERwARASoFTgAZAVgGVAB5AOoHWQCBAD4BMAD5AIkIXQCJAIEBYwAhAZUIaQAp
AZsDcACJAMQDMAD5AJYHdwB5AEgIfQCRAMkBBgCZAGYGgQCZAAgGiwCZAEIHjwChAM0DkwCZAJEE
mAChAJIAnQCZALcEogCZAJgEAQAxAWYGEACZAHQIfQCZAKQHfQCxAGYGBgD5AHAHqACxAFYHsACJ
AGYGBgAhASwBtgAhAXwIvwDBAGYGxQDhAGYGBgAuAAsASgEuABMAUwEuABsAcgEuACMAewEuACsA
pAEuADMApAEuADsApAEuAEMAewEuAEsAqgEuAFMApAEuAFsAwQFDAGMACwLhAHsACwLjAGsACwKp
AXMAcgHJAXMAcgEbAAMAAQAHAA0ACAAPAAAAqAAvAQAAGQQzAQAASwEvAQAAWgQzAQAAtQAvAQAA
LQQzAQAABAE3AQAARQQzAQAA4gQ3AQAAhQQzAQAApAQvAQAAcAQzAQAAEwY7AQAAqQFAAQAAtAdF
AQIABgADAAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIA
DwAVAAEAEAAXAAEAEQAZAAIAGwAbAAIAHAAdAAEAHQAdAAIAHgAfAASAAAABAAAAAAAAAAAAAAAA
AG4AAAAEAAAAAAAAAAAAAADNAOAAAAAAABAAAAAAAAAAAAAAANYA9gcAAAAAEAAAAAAAAAAAAAAA
1gC0BQAAAAAQAAAAAAAAAAAAAADWABMIAAAAAAQAAAAAAAAAAAAAAM0AwAQAAAAAAAAAAAEAAAC3
BgAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU0lucHV0Q29sdW1uMTAwAElEVFNJ
bnB1dENvbHVtbkNvbGxlY3Rpb24xMDAASURUU0lucHV0Q29sbGVjdGlvbjEwMABJRFRTSW5wdXQx
MDAAU0NfNjc0ZDg2MzRiYmEyNGQ0NWIxNWI0MGJkMjE1MDA2NzAAR2V0SW50MzIAPE1vZHVsZT4A
Z2V0X1BlcnNvbklEAGdldF9QZXJzb25Cb3NzSUQASW5wdXRJRABnZXRfQ29tcG9uZW50TWV0YURh
dGEAbXNjb3JsaWIAQXBwZW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfRXJyb3JDb2RlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1lAGdldF9QZXJz
b25OYW1lAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAR2V0VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBUb1N0cmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzY3NGQ4NjM0YmJh
MjRkNDViMTViNDBiZDIxNTAwNjcwLmRsbABnZXRfUGVyc29uSURfSXNOdWxsAGdldF9QZXJzb25C
b3NzSURfSXNOdWxsAGdldF9FcnJvckNvZGVfSXNOdWxsAGdldF9QZXJzb25OYW1lX0lzTnVsbABz
ZXRfSlNPTlBhcmFtX0lzTnVsbABnZXRfRXJyb3JDb2x1bW5fSXNOdWxsAFNldE51bGwAc2V0X0pT
T05QYXJhbQBnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBn
ZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24AZ2V0X0lucHV0Q29sdW1uQ29sbGVjdGlvbgBnZXRfSW5wdXRDb2xs
ZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJl
SW5mbwBQcm9wZXJ0eUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNQaXBlbGluZVdyYXAAU3RyaW5nQnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDXzY3NGQ4NjM0YmJhMjRkNDViMTViNDBiZDIxNTAwNjcwLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ182NzRkODYzNGJiYTI0
ZDQ1YjE1YjQwYmQyMTUwMDY3MC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5Db2xsZWN0aW9ucwBD
b25uZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElu
cHV0MF9Qcm9jZXNzSW5wdXQATW92ZU5leHQAU3lzdGVtLlRleHQASW5wdXQwX1Byb2Nlc3NJbnB1
dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBHZXRQcm9wZXJ0eQAAAAAAA1sA
ADl7ACIASwBlAHkAIgA6ACIARQByAHIAbwByAEMAbwBkAGUAIgAsACIAVgBhAGwAdQBlACIAOgAi
AAAFIgB9AAATRQByAHIAbwByAEMAbwBkAGUAAAlOAFUATABMAAATLAB7ACIASwBlAHkAIgA6ACIA
ABciACwAIgBWAGEAbAB1AGUAIgA6ACIAAANdAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIA
dAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBz
AHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkA
bgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA2ADcANABkADgANgAzADQAYgBi
AGEAMgA0AGQANAA1AGIAMQA1AGIANAAwAGIAZAAyADEANQAwADAANgA3ADAALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAoi4wTjLSSECBBONRvgTOlAAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERaQ4HCBI5CBI9EkEOHA4SSQUgARI5DgMgAA4GAAMODg4OBSAAEoCB
BSAAEoCFBiABEoCJHAUgABKAjQQgABI9AyAAHAUAAgIODgUgABKAkQYgARKAlQ4GIAIcHB0cBQAB
Dh0OAyAAAgkgAwESUR0IElUDBhJRAwYdCAQgAQ4IBCABAggEIAEICAUgAgEIHAcgAgIOEYCdBSAB
HQgICAABEoCREYChBSAAEoClByACAQ4SgKUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGElkD
BhJhAwYSZQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SURJVBSABARJZBAAAEmEEAAASZQUAAQES
ZQQAABIgAwAAAQMoAA4DKAACAygACAQIABJhBAgAEmUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNjc0ZDg2MzRiYmEyNGQ0NWIxNWI0
MGJkMjE1MDA2NzAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAQOAAAAAAAAAAAAAAqOAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAHDgAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA2ADcANABkADgANgAzADQAYgBiAGEAMgA0AGQANAA1AGIAMQA1AGIANAAwAGIAZAAyADEA
NQAwADAANgA3ADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADYANwA0AGQAOAA2ADMA
NABiAGIAYQAyADQAZAA0ADUAYgAxADUAYgA0ADAAYgBkADIAMQA1ADAAMAA2ADcAMAAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANgA3ADQA
ZAA4ADYAMwA0AGIAYgBhADIANABkADQANQBiADEANQBiADQAMABiAGQAMgAxADUAMAAwADYANwAw
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADYANwA0AGQA
OAA2ADMANABiAGIAYQAyADQAZAA0ADUAYgAxADUAYgA0ADAAYgBkADIAMQA1ADAAMAA2ADcAMAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAPDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_674d8634bba24d45b15b40bd21500670</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">9E</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[PersonID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonID"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[PersonName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonName"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[PersonBossID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonBossID"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Outputs[Output 0].Columns[JSONParam]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Outputs[Output 0].Columns[JSONParam]"
                          name="JSONParam" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Check Errors\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[PersonID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonID"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[PersonName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonName"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[PersonBossID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonBossID"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[PersonIDConv]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[PersonIDConv]"
                          name="PersonIDConv"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[PersonNameConv]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[PersonNameConv]"
                          name="PersonNameConv"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[PersonBossIDConv]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[PersonBossIDConv]"
                          name="PersonBossIDConv"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Check Errors\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::V_RowCount_Errors</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Check Errors\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="SOURCE - FlatFile SalesPerson"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSV_SalesPerson]"
                      connectionManagerRefId="Package.ConnectionManagers[CSV_SalesPerson]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]"
                          name="PersonID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonName]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]"
                          name="PersonName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonBossID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]"
                          name="PersonBossID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PersonID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PersonName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonBossID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PersonBossID" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Table LOG Tl_BusinessWarnings"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC [tech].[usp_LogWarningDynamic] 
	@WarningID = 4,
	@SourceID = ?,
	@SourceContext = ?,
	@SourceObject = ?,
	@CreatedBy = ?,
	@DynamicParams = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Connections[OleDbConnection]"
                      connectionManagerID="{6C1031BB-89DE-412D-A885-9CC033567726}:external"
                      connectionManagerRefId="Project.ConnectionManagers[MSOLEDBSQL_CustomerDWH]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[SourceID]"
                          cachedDataType="wstr"
                          cachedLength="4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceID]"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[SourceContext]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="SourceContext"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceContext]"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[CreatedBy]"
                          cachedDataType="guid"
                          cachedName="CreatedBy"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@CreatedBy]"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[JSONParam]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="JSONParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@DynamicParams]"
                          lineageId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Outputs[Output 0].Columns[JSONParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[SourceObject]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SourceObject"
                          externalMetadataColumnId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceObject]"
                          lineageId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceObject]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceID]"
                          dataType="wstr"
                          length="255"
                          name="@SourceID">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceContext]"
                          dataType="wstr"
                          length="255"
                          name="@SourceContext">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@CreatedBy]"
                          dataType="guid"
                          name="@CreatedBy">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@DynamicParams]"
                          dataType="nText"
                          name="@DynamicParams">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">193</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceObject]"
                          dataType="wstr"
                          length="255"
                          name="@SourceObject">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Check Errors.Paths[Data Conversion Error Output]"
                  endId="Package\Foreach Loop Container\Check Errors\Row Count.Inputs[Row Count Input 1]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Container\Check Errors\Data Conversion.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Check Errors.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Check Errors.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Check Errors\Data Conversion.Inputs[Data Conversion Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Check Errors.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Check Errors.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Check Errors\Build JSON Parameter.Inputs[Input 0]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Check Errors\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Copy to UAT"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{7698a47c-26a2-4b86-b306-e20e4ca8e40b}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Copy to UAT"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::V_PathFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::V_PathFolder_Full_UAT"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\ETL"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{2ebb05ea-9ffc-427d-8a69-35a39f4619cb}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ETL"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\ETL\Add Log Metadata"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Log Metadata"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Add Log Metadata.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                          name="SourceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[$Package::PK_SourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[$Package::PK_SourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                          name="CreatedBy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[System::PackageID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                          dataType="guid"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                          name="ModifiedBy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_GUID)@[System::PackageID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                          name="CreatedDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[System::StartTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[System::StartTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="23"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]"
                          name="SourceContext"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[$Package::PK_SourceContext]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[$Package::PK_SourceContext]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Add Log Metadata.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ETL\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ETL\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Flag_Load]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Flag_Load"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">@[User::V_RowCount_Errors] == 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::V_RowCount_Errors] == 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ETL\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[PersonID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonID"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[PersonName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonName"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[PersonBossID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PersonBossID"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonIDConv]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonIDConv]"
                          name="PersonIDConv"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonNameConv]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonNameConv]"
                          name="PersonNameConv"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonBossIDConv]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonBossIDConv]"
                          name="PersonBossIDConv"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DEST - STG Td_SalesPerson"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[Td_SalesPerson]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Connections[OleDbConnection]"
                      connectionManagerID="{6C1031BB-89DE-412D-A885-9CC033567726}:external"
                      connectionManagerRefId="Project.ConnectionManagers[MSOLEDBSQL_CustomerDWH]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[SourceID]"
                          cachedDataType="wstr"
                          cachedLength="4"
                          cachedName="SourceID"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[CreatedBy]"
                          cachedDataType="guid"
                          cachedName="CreatedBy"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[ModifiedBy]"
                          cachedDataType="guid"
                          cachedName="ModifiedBy"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedBy]"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[CreatedDate]"
                          cachedDataType="date"
                          cachedName="CreatedDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[PersonIDConv]"
                          cachedDataType="i4"
                          cachedName="PersonIDConv"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SalesPersonID]"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonIDConv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[PersonNameConv]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="PersonNameConv"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SalesPersonName]"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonNameConv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[PersonBossIDConv]"
                          cachedDataType="i4"
                          cachedName="PersonBossIDConv"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SalesPersonBossID]"
                          lineageId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[PersonBossIDConv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].Columns[SourceContext]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="SourceContext"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SourceContext]"
                          lineageId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SalesPersonID]"
                          dataType="i4"
                          name="SalesPersonID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SalesPersonName]"
                          dataType="wstr"
                          length="50"
                          name="SalesPersonName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SalesPersonBossID]"
                          dataType="i4"
                          name="SalesPersonBossID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                          dataType="wstr"
                          length="255"
                          name="SourceID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                          dataType="guid"
                          name="CreatedBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedBy]"
                          dataType="guid"
                          name="ModifiedBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input].ExternalColumns[SourceContext]"
                          dataType="wstr"
                          length="255"
                          name="SourceContext" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="SOURCE - FlatFile SalesPerson"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSV_SalesPerson]"
                      connectionManagerRefId="Package.ConnectionManagers[CSV_SalesPerson]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonID]"
                          name="PersonID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonName]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonName]"
                          name="PersonName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonBossID]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].Columns[PersonBossID]"
                          name="PersonBossID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PersonID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PersonName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output].ExternalColumns[PersonBossID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PersonBossID" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\ETL.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\ETL\Add Log Metadata.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\ETL\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\ETL.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\ETL\Add Log Metadata.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\ETL.Paths[Flag_Load]"
                  endId="Package\Foreach Loop Container\ETL\Data Conversion.Inputs[Data Conversion Input]"
                  name="Flag_Load"
                  startId="Package\Foreach Loop Container\ETL\Conditional Split.Outputs[Flag_Load]" />
                <path
                  refId="Package\Foreach Loop Container\ETL.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\ETL\Conditional Split.Inputs[Conditional Split Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6761BD5A-88B7-40E6-91BC-F40FC36D7B19}"
          DTS:From="Package\Foreach Loop Container\Check Errors"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\ETL" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{99007306-A7EB-41C9-84A3-26BCAC2891E0}"
          DTS:From="Package\Foreach Loop Container\Check Errors"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Archive File Failure"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{BECD9585-8A97-4EC7-803C-FDBB6530A58D}"
          DTS:EvalOp="4"
          DTS:Expression="@[User::V_RowCount_Errors] &gt; 0"
          DTS:From="Package\Foreach Loop Container\ETL"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Archive File Failure"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{87193A9C-4358-45C0-97F9-26BD73EB3755}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::V_RowCount_Errors] == 0 &amp;&amp;  @[$Project::ENV] != &quot;PROD&quot;"
          DTS:From="Package\Foreach Loop Container\ETL"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Archive File Success" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{DA626B1E-C27E-495F-A3D0-8C4526135BAC}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::V_RowCount_Errors] == 0 &amp;&amp;  @[$Project::ENV] == &quot;PROD&quot;"
          DTS:From="Package\Foreach Loop Container\ETL"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Copy to UAT" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{2D6856F5-03F6-4AAA-861B-C83FB4B0A6FA}"
          DTS:From="Package\Foreach Loop Container\Copy to UAT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Archive File Success 2" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{48C5DDDF-53B0-4B70-AA65-40A9E6EE8E5F}"
          DTS:ObjectName="{48C5DDDF-53B0-4B70-AA65-40A9E6EE8E5F}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::V_FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Table STG Td_SalesPerson"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B1744439-C895-41BD-865E-2017990FBD25}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Table STG Td_SalesPerson"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6C1031BB-89DE-412D-A885-9CC033567726}"
          SQLTask:SqlStatementSource="EXEC [tech].[usp_TruncateTable] &#xA;&#x9;@Schema = ?,&#xA;&#x9;@TableName = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::PK_Schema"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="$Package::PK_TableName_D"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{46E726C8-CB5A-4A3F-93C0-2FBCA7BB8676}"
      DTS:From="Package\Truncate Table STG Td_SalesPerson"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{2D4F56CF-0401-493E-87A5-EF35825D8794}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{05C4969B-387A-40B8-8FE5-40C3CB4C254B}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log Package Execution"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{626660e9-b6df-498d-9a8e-2f1e6f98a594}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Package Execution"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6C1031BB-89DE-412D-A885-9CC033567726}"
              SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Fail' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.ExecutionStatus = Source.ExecutionStatus&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::CreationDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{78BABEC7-F961-481D-8F1A-8B72CE782C5C}"
      DTS:EventID="442695072"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{51435B3B-22C1-45B8-9425-057A99A8AB5D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log Package Execution"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{fc65ce46-bf87-48c4-82ed-0fda55587222}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Package Execution"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6C1031BB-89DE-412D-A885-9CC033567726}"
              SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Success' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::CreationDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach Loop Container\Archive File Failure"
          TopLeft="416.314287237854,393.529411455701" />
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container\Archive File Success"
          TopLeft="182.171429568894,487.482352445158" />
        <NodeLayout
          Size="182,42"
          Id="Package\Foreach Loop Container\Archive File Success 2"
          TopLeft="8.35714286322496,394.152941171778" />
        <NodeLayout
          Size="138,42"
          Id="Package\Foreach Loop Container\Check Errors"
          TopLeft="235.742858030846,13.6352939701824" />
        <NodeLayout
          Size="138,42"
          Id="Package\Foreach Loop Container\Copy to UAT"
          TopLeft="21.2142857477372,315.388235358465" />
        <NodeLayout
          Size="96,42"
          Id="Package\Foreach Loop Container\ETL"
          TopLeft="228.285715529506,163.023529374228" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="279.680953446843,55.6352939701824">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,107.388235404046"
              Start="0,0"
              End="0,99.8882354040456">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,99.8882354040456" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="326.409524697513,55.6352939701824">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199.682540318119,337.894117485519"
              Start="0,0"
              End="199.682540318119,330.394117485519">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,165.357332844862" />
                  <mssgle:CubicBezierSegment
                    Point1="0,165.357332844862"
                    Point2="0,169.357332844862"
                    Point3="4,169.357332844862" />
                  <mssgle:LineSegment
                    End="195.682540318119,169.357332844862" />
                  <mssgle:CubicBezierSegment
                    Point1="195.682540318119,169.357332844862"
                    Point2="199.682540318119,169.357332844862"
                    Point3="199.682540318119,173.357332844862" />
                  <mssgle:LineSegment
                    End="199.682540318119,330.394117485519" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="84.5999225028095,174.357332844862,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="298.285715529506,205.023529374228">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="175.028571708348,188.505882081473"
              Start="0,0"
              End="175.028571708348,181.005882081473">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.4005033623146" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.4005033623146"
                    Point2="0,83.4005033623146"
                    Point3="4,83.4005033623146" />
                  <mssgle:LineSegment
                    End="171.028571708348,83.4005033623146" />
                  <mssgle:CubicBezierSegment
                    Point1="171.028571708348,83.4005033623146"
                    Point2="175.028571708348,83.4005033623146"
                    Point3="175.028571708348,87.4005033623146" />
                  <mssgle:LineSegment
                    End="175.028571708348,181.005882081473" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="63.404285854174,88.4005033623146,48.22,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="272.4785725492,205.023529374228">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,282.45882307093"
              Start="0,0"
              End="0,274.95882307093">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,274.95882307093" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,129.479411535465,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="254.285715529506,205.023529374228">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-164.071429781769,110.364705984237"
              Start="0,0"
              End="-164.071429781769,102.864705984237">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.7767885890562" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.7767885890562"
                    Point2="0,38.7767885890562"
                    Point3="-4,38.7767885890562" />
                  <mssgle:LineSegment
                    End="-160.071429781769,38.7767885890562" />
                  <mssgle:CubicBezierSegment
                    Point1="-160.071429781769,38.7767885890562"
                    Point2="-164.071429781769,38.7767885890562"
                    Point3="-164.071429781769,42.7767885890562" />
                  <mssgle:LineSegment
                    End="-164.071429781769,102.864705984237" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-90.0357148908844,43.7767885890562,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="90.0142857477372,356.988235358465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.14285711548777,37.164705813313"
              Start="0,0"
              End="9.14285711548777,29.664705813313">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5823529066565" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5823529066565"
                    Point2="0,18.5823529066565"
                    Point3="4,18.5823529066565" />
                  <mssgle:LineSegment
                    End="5.14285711548777,18.5823529066565" />
                  <mssgle:CubicBezierSegment
                    Point1="5.14285711548777,18.5823529066565"
                    Point2="9.14285711548777,18.5823529066565"
                    Point3="9.14285711548777,22.5823529066565" />
                  <mssgle:LineSegment
                    End="9.14285711548777,29.664705813313" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="641,603"
          Size="641,646"
          Id="Package\Foreach Loop Container"
          TopLeft="101.400000117079,127.694117565282" />
        <NodeLayout
          Size="250,42"
          Id="Package\Truncate Table STG Td_SalesPerson"
          TopLeft="301.428572070234,23.705882332162" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="424.164286093657,65.705882332162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.98823523312"
              Start="0,0"
              End="0,54.48823523312">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.48823523312" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="187,41"
          Id="Package.EventHandlers[OnError]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="187,41"
          Id="Package.EventHandlers[OnPostExecute]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Check Errors">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="221,41"
          Id="Package\Foreach Loop Container\Check Errors\SOURCE - FlatFile SalesPerson"
          TopLeft="281.314285183622,25.5882353242809" />
        <NodeLayout
          Size="129,41"
          Id="Package\Foreach Loop Container\Check Errors\Row Count"
          TopLeft="320.000000681196,267.352941012249" />
        <NodeLayout
          Size="156,41"
          Id="Package\Foreach Loop Container\Check Errors\Data Conversion"
          TopLeft="315.342856668453,154.717647064856" />
        <NodeLayout
          Size="181,41"
          Id="Package\Foreach Loop Container\Check Errors\Build JSON Parameter"
          TopLeft="300.000000638621,377.211764425029" />
        <NodeLayout
          Size="267,41"
          Id="Package\Foreach Loop Container\Check Errors\Update Table LOG Tl_BusinessWarnings"
          TopLeft="257.02857084621,585.352940898298" />
        <NodeLayout
          Size="207,41"
          Id="Package\Foreach Loop Container\Check Errors\Add Warning Log Metadata"
          TopLeft="287.857143469915,483.752940898298" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Check Errors.Paths[Row Count Output 1]"
          TopLeft="387.800000659909,308.952941012249">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68.2588234127805"
              Start="0,0"
              End="0,60.7588234127805">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.7588234127805" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Check Errors.Paths[Output 0]"
          TopLeft="390.928572054268,418.811764425029">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.9411764732693"
              Start="0,0"
              End="0,57.4411764732693">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.4411764732693" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Check Errors.Paths[Flat File Source Output]"
          TopLeft="392.528570926038,67.1882353242809">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87.5294117405753"
              Start="0,0"
              End="0,80.0294117405753">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.0294117405753" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Check Errors.Paths[Derived Column Output]"
          TopLeft="390.642857158062,525.352940898298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Check Errors.Paths[Data Conversion Error Output]"
          TopLeft="393.342856668453,196.317647064856">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.54285598725687,71.0352939473924"
              Start="0,0"
              End="-8.54285598725687,63.5352939473924">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5176469736962" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5176469736962"
                    Point2="0,35.5176469736962"
                    Point3="-4,35.5176469736962" />
                  <mssgle:LineSegment
                    End="-4.54285598725687,35.5176469736962" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.54285598725687,35.5176469736962"
                    Point2="-8.54285598725687,35.5176469736962"
                    Point3="-8.54285598725687,39.5176469736962" />
                  <mssgle:LineSegment
                    End="-8.54285598725687,63.5352939473924" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.3578147123784,40.5176469736962,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\ETL">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="211,41"
          Id="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson"
          TopLeft="412.999993845821,461.79999396503" />
        <NodeLayout
          Size="156,41"
          Id="Package\Foreach Loop Container\ETL\Data Conversion"
          TopLeft="434.342854895215,262.717645455531" />
        <NodeLayout
          Size="221,41"
          Id="Package\Foreach Loop Container\ETL\SOURCE - FlatFile SalesPerson"
          TopLeft="410.314283261372,22.5882353689844" />
        <NodeLayout
          Size="155,41"
          Id="Package\Foreach Loop Container\ETL\Conditional Split"
          TopLeft="441.999993413687,147.999997794628" />
        <NodeLayout
          Size="164,41"
          Id="Package\Foreach Loop Container\ETL\Add Log Metadata"
          TopLeft="433.999993532896,361.99999460578" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\ETL.Paths[Flat File Source Output]"
          TopLeft="519.95713833753,64.1882353689844">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,83.8117624256438"
              Start="0,0"
              End="0,76.3117624256438">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.3117624256438" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ETL.Paths[Flag_Load]"
          TopLeft="515.771424154451,189.599997794628">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.1176476609024"
              Start="0,0"
              End="0,65.6176476609024">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.6176476609024" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.76298828125,26.9772808617012,45.5259765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ETL.Paths[Derived Column Output]"
          TopLeft="517.299993689359,403.59999460578">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.19999935925"
              Start="0,0"
              End="0,50.69999935925">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.69999935925" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ETL.Paths[Data Conversion Output]"
          TopLeft="514.171424214056,304.317645455531">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.682349150249"
              Start="0,0"
              End="0,50.182349150249">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.182349150249" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ETL\DEST - STG Td_SalesPerson">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>