<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/28/2024 2:52:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LU-GZMRLS3"
  DTS:CreatorName="AzureAD\HamedVAHEB"
  DTS:DTSID="{71FA3BF2-F5E4-4C7B-9288-B1E5ADE0906F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="MDM_Tm_Geo"
  DTS:PackageType="5"
  DTS:VersionBuild="311"
  DTS:VersionGUID="{75B18C90-8C90-42B6-B993-D4A1FB17CB31}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="MSOLEDBSQL_CustomerDWH"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
      DTS:ObjectName="SSIS log provider for SQL Server2">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BB9329C1-03FC-4966-9345-241B822D27CA}"
      DTS:ObjectName="PK_Link">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://raw.githubusercontent.com/berserkhmdvhb/DWH_MSBI/refs/heads/main/Projects/CustomerData/Dataset/PROD/Input/MasterData/Geo/References.json</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F7F9AB6C-6C95-4A5C-91DA-6FCB244F1666}"
      DTS:ObjectName="PK_PathDir">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\MasterData\Geo</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{66D64C6A-E63A-4CE6-813E-60AB811893F4}"
      DTS:ObjectName="PK_Scrape_NumAttempts">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">3</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3E16D5D1-C22E-4095-9787-8D6E444EE94D}"
      DTS:ObjectName="PK_Scrape_TimeInterval">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">2000</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7C7A9D8D-3345-48B7-A1DA-65C480BCBF54}"
      DTS:ObjectName="PK_SourceContext">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">MDM - Geo</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F1578BA4-48DA-471B-B121-093E41BBC7AB}"
      DTS:ObjectName="PK_SourceID">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Web</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{48C69B2A-E0A4-4F2C-B7C0-763AFB55FD82}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[$Project::PR_SQLServer] + &quot;;Initial Catalog=CustomerDWH;Provider=SQLNCLI11.1;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=BERSERKLAPTOP\SQL011P;Initial Catalog=CustomerDWH;Provider=SQLNCLI11.1;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D272D7C0-83CA-4514-87E3-344401B90321}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;References.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_FileName">
      <DTS:VariableValue
        DTS:DataType="8">References.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{624378D1-E581-4099-B927-5D584C228767}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="V_Flag_Load">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B07EAECE-C0D8-4EFF-B3BA-D42F8782C328}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;[{\&quot;Key\&quot;:\&quot;FileName\&quot;,\&quot;Value\&quot;:\&quot;&quot; + @[User::V_FileName] + &quot;\&quot;}]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_JSONParam">
      <DTS:VariableValue
        DTS:DataType="8">[{"Key":"FileName","Value":"References.json"}]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D16EFC29-70FE-44BC-A6EE-0E8916573A13}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + &quot;\\&quot; + @[User::V_FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\hamed\Documents\Projects\DE\Dataset\PROD\Input\MasterData\Geo\References.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20A4A37C-78CA-4798-91AB-2A6554116F4B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + @[$Project::PR_PathFolder_Rejected] + &quot;\\&quot; + REPLACE( @[User::V_FileName],  &quot;.&quot; + RIGHT(@[User::V_FileName], LEN(@[User::V_FileName]) - FINDSTRING(@[User::V_FileName], &quot;.&quot;, 1)), &quot;@&quot; ) + SUBSTRING((DT_WSTR, 50) GETDATE(), 1, 4) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) MONTH(GETDATE()), 2) + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DAY(GETDATE()), 2) + &quot;_&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;hh&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;mi&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;ss&quot;, GETDATE()), 2) + &quot;.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile_Archive_Fail">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\hamed\Documents\Projects\DE\Dataset\PROD\Input\MasterData\Geo\Rejected\References@20250102_130723.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9874DFA7-62E2-47D9-B685-1BB448A5EFDF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + @[$Project::PR_PathFolder_Processed] + &quot;\\&quot; + REPLACE( @[User::V_FileName],  &quot;.&quot; + RIGHT(@[User::V_FileName], LEN(@[User::V_FileName]) - FINDSTRING(@[User::V_FileName], &quot;.&quot;, 1)), &quot;@&quot; ) + SUBSTRING((DT_WSTR, 50) GETDATE(), 1, 4) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) MONTH(GETDATE()), 2) + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DAY(GETDATE()), 2) + &quot;_&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;hh&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;mi&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;ss&quot;, GETDATE()), 2) + &quot;.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile_Archive_Success">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\hamed\Documents\Projects\DE\Dataset\PROD\Input\MasterData\Geo\Processed\References@20250102_130723.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{67E2DBAF-BDFF-496A-823B-1B4A6EAA903B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::PR_PathDir_Root] + &quot;\\&quot; + @[$Project::ENV] +  &quot;\\&quot; + &quot;Input&quot; +  @[$Package::PK_PathDir]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFolder_Full">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\hamed\Documents\Projects\DE\Dataset\PROD\Input\MasterData\Geo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6C1AA93-C159-4B83-BC92-E71E74AAA8F1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="V_RowCount_Errors">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,13,OnInformation,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Archive File Failure"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{b3400212-69bc-4b0f-a7ef-6b5d427e99f8}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Archive File Failure"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::V_PathFile"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::V_PathFile_Archive_Fail"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Archive File Success"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{4d7782a1-37ff-4bbf-97de-10ef75f2ce66}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Archive File Success"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::V_PathFile"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::V_PathFile_Archive_Success"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check Errors"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{57B8863E-6B56-4EF5-B960-10EDF6219621}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check Errors"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="[JSON Source].[LocalFilePath]">@[User::V_PathFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Check Errors\Add Warning Log Metadata"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add Warning Log Metadata"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="3"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::PK_SourceID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::PK_SourceID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="15"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]"
                      name="SourceContext"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::PK_SourceContext]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::PK_SourceContext]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceObject]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="14"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceObject]"
                      name="SourceObject"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Countries.json"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Countries.json"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                      name="CreatedBy"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)@[System::PackageID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                      name="ModifiedBy"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)@[System::PackageID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                      dataType="date"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                      name="CreatedDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[System::StartTime]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[System::StartTime]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Check Errors\Build JSON Parameter"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Build JSON Parameter"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Initialize the JSON builder
        StringBuilder jsonBuilder = new StringBuilder();
        jsonBuilder.Append("[");

        // Add ErrorCode as the first key-value pair
        jsonBuilder.Append("{\"Key\":\"ErrorCode\",\"Value\":\"" + Row.ErrorCode.ToString() + "\"}");

        // Dynamically process all input columns
        foreach (IDTSInputColumn100 column in ComponentMetaData.InputCollection[0].InputColumnCollection)
        {
            // Skip ErrorCode as it's already handled
            if (column.Name == "ErrorCode") continue;

            // Get column name and value
            string columnName = column.Name;
            var columnValue = Row.GetType().GetProperty(columnName).GetValue(Row, null);

            // Handle null values
            string columnValueString = columnValue == null ? "NULL" : columnValue.ToString();

            // Append the column name and value to the JSON
            jsonBuilder.Append(",{\"Key\":\"" + columnName + "\",\"Value\":\"" + columnValueString + "\"}");
        }

        jsonBuilder.Append("]");

        // Assign the generated JSON to the JSONParam output column
        Row.JSONParam = jsonBuilder.ToString();
    }


}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 RowIndex
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool RowIndex_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String alpha2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool alpha2_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String alpha3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool alpha3_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String countrycode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool countrycode_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String iso31662
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool iso31662_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String region
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool region_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String subregion
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool subregion_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String intermediateregion
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool intermediateregion_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String regioncode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool regioncode_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String subregioncode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool subregioncode_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String intermediateregioncode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool intermediateregioncode_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[12]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[13]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String JSONParam
    {
        set
        {
            this[14] = value;
        }
    }
    public bool JSONParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c5e05388526468abcb92ba5345c36d6.Properties.Settings.get_Default():SC_4c5e05388526468abcb92ba5345c36d6.Properties.Sett" +
    "ings")]

namespace SC_4c5e05388526468abcb92ba5345c36d6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_4c5e05388526468abcb92ba5345c36d6</msb:CodeName>
    <msb:DisplayName>SC_4c5e05388526468abcb92ba5345c36d6</msb:DisplayName>
    <msb:ProjectId>{E66D1A24-9829-4F85-AA8A-CAC795F4BA65}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4c5e05388526468abcb92ba5345c36d6.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4c5e05388526468abcb92ba5345c36d6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4c5e05388526468abcb92ba5345c36d6")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4c5e05388526468abcb92ba5345c36d6.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fba6a6e4-3cc8-44ae-97c0-2527522f6d06}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4c5e05388526468abcb92ba5345c36d6</RootNamespace>
    <AssemblyName>SC_4c5e05388526468abcb92ba5345c36d6</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_4c5e05388526468abcb92ba5345c36d6" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c5e05388526468abcb92ba5345c36d6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c5e05388526468abcb92ba5345c36d6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4c5e05388526468abcb92ba5345c36d6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4c5e05388526468abcb92ba5345c36d6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4c5e05388526468abcb92ba5345c36d6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4c5e05388526468abcb92ba5345c36d6.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANhwVWcAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAmjwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEg8AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
PAAAAAAAAEgAAAACAAUAZCQAACwXAAABAAAAAAAAAJA7AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAGgEAAAEAABFzEgAACgoG
cgEAAHBvEwAACiYGcgUAAHADbx4AAAYLEgEoFAAACnI/AABwKBUAAApvEwAACiYCKBYAAApvFwAA
ChaMHgAAAW8YAAAKbxkAAApvGgAACgw4hAAAAAhvGwAACnQQAAABDQlvHAAACnJFAABwKB0AAAot
ZglvHAAAChMEA28eAAAKEQRvHwAACgMUbyAAAAoTBREFLAkRBW8hAAAKKwVyWQAAcBMGBhuNHwAA
ASUWcmMAAHCiJRcRBKIlGHJ3AABwoiUZEQaiJRpyPwAAcKIoIgAACm8TAAAKJghvIwAACjpx////
3hQIdRIAAAETBxEHLAcRB28kAAAK3AZyjwAAcG8TAAAKJgMGbyEAAApvIgAABioAAAEQAAACAFcA
lu0AFAAAAAAeAigmAAAGKioCAwQFKCUAAAoqUgJ7JgAACgJ7JwAAChaUbygAAAoqIgIWKCkAAAoq
UgJ7JgAACgJ7JwAACheUbyoAAAoqIgIXKCkAAAoqUgJ7JgAACgJ7JwAAChiUbyoAAAoqIgIYKCkA
AAoqUgJ7JgAACgJ7JwAAChmUbyoAAAoqIgIZKCkAAAoqUgJ7JgAACgJ7JwAAChqUbyoAAAoqIgIa
KCkAAAoqUgJ7JgAACgJ7JwAAChuUbyoAAAoqIgIbKCkAAAoqUgJ7JgAACgJ7JwAAChyUbyoAAAoq
IgIcKCkAAAoqUgJ7JgAACgJ7JwAACh2UbyoAAAoqIgIdKCkAAAoqUgJ7JgAACgJ7JwAACh6UbyoA
AAoqIgIeKCkAAAoqVgJ7JgAACgJ7JwAACh8JlG8qAAAKKiYCHwkoKQAACipWAnsmAAAKAnsnAAAK
HwqUbyoAAAoqJgIfCigpAAAKKlYCeyYAAAoCeycAAAofC5RvKgAACiomAh8LKCkAAAoqVgJ7JgAA
CgJ7JwAACh8MlG8rAAAKKiYCHwwoKQAACipWAnsmAAAKAnsnAAAKHw2UbysAAAoqJgIfDSgpAAAK
KioCHw4DKCwAAAoqXgMsCQIfDigtAAAKKnKTAABwcy4AAAp6HgIoLwAACioeAigwAAAKKn4CKDEA
AAoCAnMqAAAGfQEAAAQCAnMrAAAGfQIAAAQqkgRyMAEAcBpvMgAACiwVAgUCAygzAAAKDgRzBQAA
Bm8oAAAGKkorBwIDbykAAAYDbyQAAAYt8SoGKjoCKDQAAAoCA30DAAAEKjoCKDQAAAoCA30EAAAE
Kh4CKDQAAAoqrn4FAAAELR5yQAEAcNAHAAACKDUAAApvNgAACnM3AAAKgAUAAAR+BQAABCoafgYA
AAQqHgKABgAABCoafgcAAAQqHgIoOAAACiouczEAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAANwIAAAjfgAASAkAAPwJAAAjU3RyaW5ncwAAAABEEwAAtAEAACNV
UwD4FAAAEAAAACNHVUlEAAAACBUAACQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYA
AAEAAAApAAAACAAAAAcAAAAyAAAADwAAADgAAAAQAAAAAQAAAAMAAAAhAAAAIgAAAAEAAAAFAAAA
AQAAAAAAQQQBAAAAAAAGACYD0QcGALoD0QcGAHICvgcPAEUIAAAGAJ8CYwYGAAkDYwYGAOoCYwYG
AKEDYwYGAEYDYwYGAF8DYwYGALYCYwYGANEC/gMKAHoDtAEGACMHnAkGAJcHwggOABoAbgcGAOgI
2wUGAGgB2wUKAE0HtAESAD4HtAEKAOcGtAEKACUJtAEGAFUCvgcGAF4H8QcGAM4GTgYWACUCKwQW
AIYCKwQWAAUCOQYGADoC0QcGAHEA2wUGACQE2wUOAAEAbgcOAEoAbgcOAGEAbgcOAC0AbgcGANgB
2wUGANoGYwYGAKMG2wUGAL0G2wUGAHQB2wUGANgJYwYAAAAAxwAAAAAAAQABAAEAEADuBQAAEAAB
AAEAAQAQADEHAABNAAEABQABABAABwkAAFkAAQAmAAEAEADVCAAARQADACoAAQAQAIMIAABFAAQA
KwAAABAA+AdUCEUABQAsAAABEACyCFQIcQAHADAABgDVCOQABgCDCOgAAQAVCewAAQAVCewAEQDi
BfAAEQD1AfQAEQD+APgAUCAAAAAAxgDYAwYAAQBYIAAAAADGAOMDBgABAGAgAAAAAMYAqAn8AAEA
mCEAAAAAhhixBwYAAgCgIQAAAACGGLEHgQACAKshAAAAAIYIxwkCAQUAwCEAAAAAhgifBX0ABQDJ
IQAAAACGCKsBMAAFAN4hAAAAAIYIHgV9AAUA5yEAAAAAhgiEADAABQD8IQAAAACGCH0EfQAFAAUi
AAAAAIYIjwAwAAUAGiIAAAAAhgiPBH0ABQAjIgAAAACGCFgBMAAFADgiAAAAAIYIBwV9AAUAQSIA
AAAAhgh3ADAABQBWIgAAAACGCGkEfQAFAF8iAAAAAIYICQYwAAUAdCIAAAAAhghaBX0ABQB9IgAA
AACGCBQGMAAFAJIiAAAAAIYIbAV9AAUAmyIAAAAAhggiBjAABQCwIgAAAACGCIEFfQAFALkiAAAA
AIYIHAEwAAUAzyIAAAAAhgi2BH0ABQDZIgAAAACGCCsBMAAFAO8iAAAAAIYIzAR9AAUA+SIAAAAA
hgg9ATAABQAPIwAAAACGCOUEfQAFABkjAAAAAIYIDgEGAQUALyMAAAAAhgihBH0ABQA5IwAAAACG
CPkFBgEFAE8jAAAAAIYIQwV9AAUAWSMAAAAAhgi7BRAABQBkIwAAAACGCC4FCgEGAHwjAAAAAIYA
vwl9AAcAhCMAAAAAhgDvCH0ABwCMIwAAAACGGLEHBgAHAKwjAAAAAMYAhgkPAQcA0SMAAAAAxgF/
CfwACwDkIwAAAADGAagJ/AAMAOYjAAAAAIYYsQcZAQ0A9SMAAAAAhhixBxkBDgAEJAAAAACDGLEH
BgAPAAwkAAAAAJMIWgcfAQ8AOCQAAAAAkwjdASQBDwA/JAAAAACTCOkBKQEPAEckAAAAAJYI+wgv
ARAATiQAAAAAhhixBwYAEABWJAAAAACRGLcHNAEQAAAAAQDDCQAAAQBTBwAAAgCNCAAAAwD1BgAA
AQD4AwAAAQD4AwAAAQDQAAAAAgChAQAAAwBTBwAABAD1BgAAAQBTBwAAAQDDCQAAAQArCQAAAQAr
CQAAAQD4AwkAsQcBABEAsQcGABkAsQcKACkAsQcQADEAsQcQADkAsQcQAEEAsQcQAEkAsQcQAFEA
sQcQAFkAsQcQAGEAsQcQAGkAsQcGALkAsQcGANkAsQcVAOkAsQcGALEA2AMGALEA4wMGAHEAsQcG
AHEA9wAqAPEAGAQwAPkA4Qg0ALEA2AA7AAEBjwZBAAkByQVHABEBdQZOABkBowdUAHkANQlZAIEA
mAEwAPkA4QldAIkA1QFjACEB7QlpACkB7wNwAIkAGAQwAPkA4Qh3AHkAkwl9AJEAHQIGAJkAsQeB
AJkAUweLAJkAjQiPAKEAmgCTAJkArAWYAKEAIQSdAKEAbgCiAJkA0gWnAJkAswUBADEBsQcQAJkA
vwl9AJkA7wh9ALEAsQcGAPkAuwitALEAoQi1AIkAsQcGACEBhgG7ACEB1AnEAMEAsQfKAOEAsQcG
AC4ACwBXAS4AEwBgAS4AGwB/AS4AIwCIAS4AKwCxAS4AMwCxAS4AOwCxAS4AQwCIAS4ASwC3AS4A
UwCxAS4AWwDOAUMAYwAcAuEAewAcAuMAawAcAukDcwB/AQkEcwB/ARsAAwABAAcAHwAIACEAAADL
CTgBAACjBTwBAACvAUABAAAiBTwBAACIAEABAACBBDwBAACTAEABAACTBDwBAABcAUABAAALBTwB
AAB7AEABAABtBDwBAAAyBkABAACRBTwBAAAYBkABAABwBTwBAAAmBkABAACFBTwBAABNAUABAAD1
BDwBAAAvAUABAADQBDwBAABBAUABAADpBDwBAAASAUQBAAClBDwBAAD9BUQBAABHBTwBAAC/BUAB
AAAyBTwBAABeB0gBAAD9AU0BAAD/CFIBAgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsAAgAL
AA0AAgAMAA8AAgANABEAAgAOABMAAgAPABUAAgAQABcAAgARABkAAgASABsAAgATAB0AAgAUAB8A
AgAVACEAAgAWACMAAgAXACUAAgAYACcAAgAZACkAAgAaACsAAgAbAC0AAgAcAC8AAgAdADEAAgAe
ADMAAgAfADUAAgAgADcAAgAhADkAAQAiADsAAQAjAD0AAgAtAD8AAgAuAEEAAQAvAEEAAgAwAEMA
BIAAAAEAAAAAAAAAAAAAAAAAowAAAAQAAAAAAAAAAAAAANIA7gAAAAAAEAAAAAAAAAAAAAAA2wBB
CQAAAAAQAAAAAAAAAAAAAADbAP8GAAAAABAAAAAAAAAAAAAAANsAXgkAAAAABAAAAAAAAAAAAAAA
0gDbBQAAAAAAAAAAAQAAAAIIAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU0lucHV0
Q29sdW1uMTAwAElEVFNJbnB1dENvbHVtbkNvbGxlY3Rpb24xMDAASURUU0lucHV0Q29sbGVjdGlv
bjEwMABJRFRTSW5wdXQxMDAAR2V0SW50MzIAZ2V0X2lzbzMxNjYyAGdldF9hbHBoYTIAZ2V0X2Fs
cGhhMwBHZXRJbnQ2NABTQ180YzVlMDUzODg1MjY0NjhhYmNiOTJiYTUzNDVjMzZkNgA8TW9kdWxl
PgBJbnB1dElEAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBBcHBlbmQAZGVmYXVsdElu
c3RhbmNlAGdldF9FcnJvckNvZGUAZ2V0X3JlZ2lvbmNvZGUAZ2V0X3N1YnJlZ2lvbmNvZGUAZ2V0
X2ludGVybWVkaWF0ZXJlZ2lvbmNvZGUAZ2V0X2NvdW50cnljb2RlAElEaXNwb3NhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1lAElucHV0TmFtZQBnZXRfbmFt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3Nl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUAR2V0VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBHZXRT
dHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzRjNWUwNTM4ODUyNjQ2OGFiY2I5MmJhNTM0
NWMzNmQ2LmRsbABnZXRfaXNvMzE2NjJfSXNOdWxsAGdldF9hbHBoYTJfSXNOdWxsAGdldF9hbHBo
YTNfSXNOdWxsAGdldF9FcnJvckNvZGVfSXNOdWxsAGdldF9yZWdpb25jb2RlX0lzTnVsbABnZXRf
c3VicmVnaW9uY29kZV9Jc051bGwAZ2V0X2ludGVybWVkaWF0ZXJlZ2lvbmNvZGVfSXNOdWxsAGdl
dF9jb3VudHJ5Y29kZV9Jc051bGwAZ2V0X25hbWVfSXNOdWxsAHNldF9KU09OUGFyYW1fSXNOdWxs
AGdldF9FcnJvckNvbHVtbl9Jc051bGwAZ2V0X3JlZ2lvbl9Jc051bGwAZ2V0X3N1YnJlZ2lvbl9J
c051bGwAZ2V0X2ludGVybWVkaWF0ZXJlZ2lvbl9Jc051bGwAZ2V0X1Jvd0luZGV4X0lzTnVsbABT
ZXROdWxsAHNldF9KU09OUGFyYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AZ2V0X0Vycm9yQ29sdW1uAGdldF9yZWdpb24AZ2V0X3N1YnJlZ2lvbgBnZXRf
aW50ZXJtZWRpYXRlcmVnaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9JbnB1dENvbHVtbkNvbGxlY3Rpb24AZ2V0X0lucHV0
Q29sbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3Vs
dHVyZUluZm8AUHJvcGVydHlJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN0cmluZ0J1aWxkZXIASW5wdXQwQnVmZmVyAFBpcGVs
aW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTQ180YzVlMDUzODg1MjY0NjhhYmNiOTJiYTUzNDVjMzZkNi5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNGM1ZTA1Mzg4
NTI2NDY4YWJjYjkyYmE1MzQ1YzM2ZDYuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1u
SW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBTeXN0ZW0uQ29sbGVjdGlv
bnMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABJbnB1dDBfUHJvY2Vzc0lucHV0AE1vdmVOZXh0AFN5c3RlbS5UZXh0AElucHV0MF9Qcm9jZXNz
SW5wdXRSb3cATmV4dFJvdwBnZXRfUm93SW5kZXgAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AEdl
dFByb3BlcnR5AAAAAAADWwAAOXsAIgBLAGUAeQAiADoAIgBFAHIAcgBvAHIAQwBvAGQAZQAiACwA
IgBWAGEAbAB1AGUAIgA6ACIAAAUiAH0AABNFAHIAcgBvAHIAQwBvAGQAZQAACU4AVQBMAEwAABMs
AHsAIgBLAGUAeQAiADoAIgAAFyIALAAiAFYAYQBsAHUAZQAiADoAIgAAA10AAICbSQBzAE4AdQBs
AGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAA
RgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAg
AGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADQA
YwA1AGUAMAA1ADMAOAA4ADUAMgA2ADQANgA4AGEAYgBjAGIAOQAyAGIAYQA1ADMANAA1AGMAMwA2
AGQANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAACoZVim5Zaq
RYwKaYtRgdQoAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFpDgcIEjkIEj0SQQ4cDhJJBSABEjkO
AyAADgYAAw4ODg4FIAASgIEFIAASgIUGIAESgIkcBSAAEoCNBCAAEj0DIAAcBQACAg4OBSAAEoCR
BiABEoCVDgYgAhwcHRwFAAEOHQ4DIAACCSADARJRHQgSVQMGElEDBh0IBCABCggEIAECCAQgAQ4I
BCABCAgFIAIBCBwHIAICDhGAnQUgAR0ICAgAARKAkRGAoQUgABKApQcgAgEOEoClCLd6XFYZNOCJ
CImEXc2AgMyRAwYSFAMGEhgDBhJZAwYSYQMGEmUDBhIgBSABARIMAyAACgMgAAgEIAEBAgkgBAEI
DhJRElUFIAEBElkEAAASYQQAABJlBQABARJlBAAAEiADAAABAygACgMoAAIDKAAOAygACAQIABJh
BAgAEmUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfNGM1ZTA1Mzg4NTI2NDY4YWJjYjkyYmE1MzQ1YzM2ZDYAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyNAAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yBAEAAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
cDwAAAAAAAAAAAAAijwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHw8AAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANABjADUAZQAwADUAMwA4ADgANQAyADYANAA2ADgAYQBiAGMAYgA5ADIAYgBhADUAMwA0ADUA
YwAzADYAZAA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0AGMANQBlADAANQAzADgA
OAA1ADIANgA0ADYAOABhAGIAYwBiADkAMgBiAGEANQAzADQANQBjADMANgBkADYALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQAYwA1AGUA
MAA1ADMAOAA4ADUAMgA2ADQANgA4AGEAYgBjAGIAOQAyAGIAYQA1ADMANAA1AGMAMwA2AGQANgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0AGMANQBlADAA
NQAzADgAOAA1ADIANgA0ADYAOABhAGIAYwBiADkAMgBiAGEANQAzADQANQBjADMANgBkADYAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJw8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4c5e05388526468abcb92ba5345c36d6</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">78</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[_RowIndex]"
                      cachedDataType="i8"
                      cachedName="_RowIndex"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[_RowIndex]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[name]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[alpha-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-2"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-2]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[alpha-3]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-3"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-3]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[country-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="country-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[country-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[iso_3166-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[iso_3166-2]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[sub-region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub-region"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[intermediate-region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[sub-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="sub-region-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[intermediate-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Check Errors\Build JSON Parameter.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\Build JSON Parameter.Outputs[Output 0].Columns[JSONParam]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Check Errors\Build JSON Parameter.Outputs[Output 0].Columns[JSONParam]"
                      name="JSONParam" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Check Errors\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[name]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[alpha-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-2"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-2]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[alpha-3]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-3"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-3]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[country-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="country-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[country-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[iso_3166-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[iso_3166-2]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[sub-region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub-region"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[intermediate-region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[sub-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="sub-region-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region-code]" />
                    <inputColumn
                      refId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input].Columns[intermediate-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region-code"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region-code]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[nameConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="255"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[nameConv]"
                      name="nameConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-2Conv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="2"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-2Conv]"
                      name="alpha-2Conv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-2]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="3"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]"
                      name="alpha-3Conv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-3]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[country-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="3"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[country-codeConv]"
                      name="country-codeConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[country-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[iso_3166-2Conv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="50"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[iso_3166-2Conv]"
                      name="iso_3166-2Conv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[iso_3166-2]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[regionConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="100"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[regionConv]"
                      name="regionConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[region]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[sub-regionConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="100"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[sub-regionConv]"
                      name="sub-regionConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-regionConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="100"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-regionConv]"
                      name="intermediate-regionConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[region-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="3"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[region-codeConv]"
                      name="region-codeConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[region-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[sub-region-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="3"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[sub-region-codeConv]"
                      name="sub-region-codeConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-region-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="3"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-region-codeConv]"
                      name="intermediate-region-codeConv"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Check Errors\JSON Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2011-2024 KingswaySoft Inc."
              description="Retrieves JSON documents and extracts them into columns."
              name="JSON Source"
              usesDispositions="true"
              version="5">
              <properties>
                <property
                  dataType="System.String"
                  name="Design">[{"NodeType":1,"OutputType":"Output","OutputOrColumnName":"Root","Children":[{"NodeType":2,"OutputType":"None","Children":[{"NodeName":"name","NodeType":3,"OutputType":"Column","OutputOrColumnName":"name"},{"NodeName":"alpha-2","NodeType":3,"OutputType":"Column","OutputOrColumnName":"alpha-2"},{"NodeName":"alpha-3","NodeType":3,"OutputType":"Column","OutputOrColumnName":"alpha-3"},{"NodeName":"country-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"country-code"},{"NodeName":"iso_3166-2","NodeType":3,"OutputType":"Column","OutputOrColumnName":"iso_3166-2"},{"NodeName":"region","NodeType":3,"OutputType":"Column","OutputOrColumnName":"region"},{"NodeName":"sub-region","NodeType":3,"OutputType":"Column","OutputOrColumnName":"sub-region"},{"NodeName":"intermediate-region","NodeType":3,"OutputType":"Column","OutputOrColumnName":"intermediate-region"},{"NodeName":"region-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"region-code"},{"NodeName":"sub-region-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"sub-region-code"},{"NodeName":"intermediate-region-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"intermediate-region-code"}]}]}]</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when merging repeated values."
                  expressionType="Notify"
                  name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                <property
                  dataType="System.String"
                  description="Specifies the text delimiter to use when merging repeated values."
                  expressionType="Notify"
                  name="IsRepeatedTextDelimiter">Comma ( , )</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to read null values from the document."
                  expressionType="Notify"
                  name="NullMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonExtractNullMode">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the timzone to convert DateTimes to"
                  expressionType="Notify"
                  name="OutputTimezone"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.TimeZone">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the text encoding to use when reading the document."
                  expressionType="Notify"
                  name="Encoding">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if document node names are case insensitive."
                  expressionType="Notify"
                  name="NodeNamesAreCaseInsensitive">false</property>
                <property
                  dataType="System.String"
                  description="The relative path of the HTTP request that will be combined with the base path from the connection manager."
                  expressionType="Notify"
                  name="RelativePath"></property>
                <property
                  dataType="System.String"
                  description="The body of the HTTP request."
                  expressionType="Notify"
                  name="RequestBody"></property>
                <property
                  dataType="System.String"
                  description="The headers that will be used in the request."
                  expressionType="Notify"
                  name="RequestHeaders">[{"Key":"Accept","Value":{"IsExpression":false,"Value":"application/json"}}]</property>
                <property
                  dataType="System.String"
                  description="The query string parameters that will be used in the request."
                  expressionType="Notify"
                  name="RequestQueryStringParameters">[]</property>
                <property
                  dataType="System.String"
                  description="The expression that determines if requests should keep being sent."
                  expressionType="Notify"
                  name="RequestAgainRule"></property>
                <property
                  dataType="System.String"
                  description="The HTTP Method to use when sending requests."
                  expressionType="Notify"
                  name="HttpMethod">GET</property>
                <property
                  dataType="System.Null"
                  description="Specifies the name of the variable to get the json document from."
                  expressionType="Notify"
                  name="InputVariable" />
                <property
                  dataType="System.String"
                  description="Specifies the path to the Item to get the json document from."
                  expressionType="Notify"
                  name="LocalFilePath">C:\Users\hamed\Documents\Projects\DE\Dataset\PROD\Input\MasterData\Geo\References.json</property>
                <property
                  dataType="System.Int32"
                  description="The max number of identical requests that will be before an error is raised."
                  expressionType="Notify"
                  name="MaxIdenticalRequests">1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.JsonSourceComponent</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Check Errors\JSON Source.Outputs[Root]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Root"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="KeyField"
                      name="KeyField">#{Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="RowIndexField"
                      name="RowIndexField">#{Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Check Errors\-1:invalid}</property>
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[_RowIndex]"
                      dataType="i8"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[_RowIndex]"
                      name="_RowIndex"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[name]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[name]"
                      length="255"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-2]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[alpha-2]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-2]"
                      name="alpha-2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-3]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[alpha-3]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[alpha-3]"
                      name="alpha-3"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[country-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[country-code]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[country-code]"
                      name="country-code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[iso_3166-2]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[iso_3166-2]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[iso_3166-2]"
                      name="iso_3166-2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[region]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region]"
                      name="region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[sub-region]"
                      length="255"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region]"
                      name="sub-region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[intermediate-region]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region]"
                      name="intermediate-region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[region-code]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[region-code]"
                      name="region-code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[sub-region-code]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[sub-region-code]"
                      name="sub-region-code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[intermediate-region-code]"
                      length="50"
                      lineageId="Package\Check Errors\JSON Source.Outputs[Root].Columns[intermediate-region-code]"
                      name="intermediate-region-code"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]"
                      dataType="i8"
                      name="_RowIndex" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[name]"
                      dataType="wstr"
                      length="255"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[alpha-2]"
                      dataType="wstr"
                      length="50"
                      name="alpha-2" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[alpha-3]"
                      dataType="wstr"
                      length="50"
                      name="alpha-3" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[country-code]"
                      dataType="wstr"
                      length="50"
                      name="country-code" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[iso_3166-2]"
                      dataType="wstr"
                      length="50"
                      name="iso_3166-2" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[region]"
                      dataType="wstr"
                      length="50"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[sub-region]"
                      dataType="wstr"
                      length="255"
                      name="sub-region" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[intermediate-region]"
                      dataType="wstr"
                      length="50"
                      name="intermediate-region" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[region-code]"
                      dataType="wstr"
                      length="50"
                      name="region-code" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[sub-region-code]"
                      dataType="wstr"
                      length="50"
                      name="sub-region-code" />
                    <externalMetadataColumn
                      refId="Package\Check Errors\JSON Source.Outputs[Root].ExternalColumns[intermediate-region-code]"
                      dataType="wstr"
                      length="50"
                      name="intermediate-region-code" />
                  </externalMetadataColumns>
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Check Errors\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::V_RowCount_Errors</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Check Errors\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Check Errors\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Check Errors\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Table LOG Tl_BusinessWarnings"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC [tech].[usp_LogWarningDynamic] 
	@WarningID = 4,
	@SourceID = ?,
	@SourceContext = ?,
	@SourceObject = ?,
	@CreatedBy = ?,
	@DynamicParams = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Connections[OleDbConnection]"
                  connectionManagerID="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  connectionManagerRefId="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceID]"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[SourceContext]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="SourceContext"
                      externalMetadataColumnId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceContext]"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceContext]" />
                    <inputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[CreatedBy]"
                      cachedDataType="guid"
                      cachedName="CreatedBy"
                      externalMetadataColumnId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@CreatedBy]"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]" />
                    <inputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[JSONParam]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="JSONParam"
                      externalMetadataColumnId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@DynamicParams]"
                      lineageId="Package\Check Errors\Build JSON Parameter.Outputs[Output 0].Columns[JSONParam]" />
                    <inputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].Columns[SourceObject]"
                      cachedDataType="wstr"
                      cachedLength="14"
                      cachedName="SourceObject"
                      externalMetadataColumnId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceObject]"
                      lineageId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output].Columns[SourceObject]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceID]"
                      dataType="wstr"
                      length="255"
                      name="@SourceID">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceContext]"
                      dataType="wstr"
                      length="255"
                      name="@SourceContext">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@CreatedBy]"
                      dataType="guid"
                      name="@CreatedBy">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@DynamicParams]"
                      dataType="nText"
                      name="@DynamicParams">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">193</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input].ExternalColumns[@SourceObject]"
                      dataType="wstr"
                      length="255"
                      name="@SourceObject">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Check Errors.Paths[Data Conversion Error Output]"
              endId="Package\Check Errors\Row Count.Inputs[Row Count Input 1]"
              name="Data Conversion Error Output"
              startId="Package\Check Errors\Data Conversion.Outputs[Data Conversion Error Output]" />
            <path
              refId="Package\Check Errors.Paths[Derived Column Output]"
              endId="Package\Check Errors\Update Table LOG Tl_BusinessWarnings.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Check Errors\Add Warning Log Metadata.Outputs[Derived Column Output]" />
            <path
              refId="Package\Check Errors.Paths[Output 0]"
              endId="Package\Check Errors\Add Warning Log Metadata.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Check Errors\Build JSON Parameter.Outputs[Output 0]" />
            <path
              refId="Package\Check Errors.Paths[Root]"
              endId="Package\Check Errors\Data Conversion.Inputs[Data Conversion Input]"
              name="Root"
              startId="Package\Check Errors\JSON Source.Outputs[Root]" />
            <path
              refId="Package\Check Errors.Paths[Row Count Output 1]"
              endId="Package\Check Errors\Build JSON Parameter.Inputs[Input 0]"
              name="Row Count Output 1"
              startId="Package\Check Errors\Row Count.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check file existence"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1498C411-34B1-4487-8904-878D84345917}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check file existence"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e7cf713ed1274b6da2a49005ad567d92"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::V_PathFile,$Package::PK_Scrape_NumAttempts,$Package::PK_Scrape_TimeInterval"
          ReadWriteVariables="User::V_Flag_Load">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_e7cf713ed1274b6da2a49005ad567d92
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Retrieve the file path from the SSIS variable
            string filePath = Dts.Variables["User::V_PathFile"].Value.ToString();

            // Retrieve retry parameters from package parameters
            int maxRetries = Convert.ToInt32(Dts.Variables["$Package::PK_Scrape_NumAttempts"].Value);
            int retryInterval = Convert.ToInt32(Dts.Variables["$Package::PK_Scrape_TimeInterval"].Value);

            // Initialize the load flag as false by default
            bool flagLoad = false;

            // Variable for the fireAgain parameter
            bool fireAgain = true;

            for (int attempt = 1; attempt <= maxRetries; attempt++)
            {
                if (File.Exists(filePath))
                {
                    // File exists, set the flag to true and break the loop
                    flagLoad = true;
                    break;
                }
                else
                {
                    // Log a message for debugging purposes
                    Dts.Events.FireInformation(0, "File Check", $"File not found. Retry attempt {attempt} of {maxRetries}.", string.Empty, 0, ref fireAgain);

                    // Wait before retrying (except on the last attempt)
                    if (attempt < maxRetries)
                    {
                        System.Threading.Thread.Sleep(retryInterval);
                    }
                }
            }

            // Update the SSIS variable with the flag's value
            Dts.Variables["User::V_Flag_Load"].Value = flagLoad;

            // Log the final status
            if (flagLoad)
            {
                Dts.Events.FireInformation(0, "File Check", $"File '{filePath}' found.", string.Empty, 0, ref fireAgain);
            }
            else
            {
                Dts.Events.FireWarning(0, "File Check", $"File '{filePath}' does not exist after {maxRetries} retries.", string.Empty, 0);
            }

            // Mark the task as successful regardless of the flag's value
            Dts.TaskResult = (int)ScriptResults.Success;
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e7cf713ed1274b6da2a49005ad567d92.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e7cf713ed1274b6da2a49005ad567d92</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e7cf713ed1274b6da2a49005ad567d92</msb:DisplayName>
    <msb:ProjectId>{D7E082D0-382A-4896-A5DD-CD452968D373}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e7cf713ed1274b6da2a49005ad567d92.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Settings.get_Default():ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Sett" +
    "ings")]

namespace ST_e7cf713ed1274b6da2a49005ad567d92.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e7cf713ed1274b6da2a49005ad567d92")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e7cf713ed1274b6da2a49005ad567d92")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_e7cf713ed1274b6da2a49005ad567d92.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0676c515-824e-4ea6-b255-39837136bdf8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e7cf713ed1274b6da2a49005ad567d92</RootNamespace>
    <AssemblyName>ST_e7cf713ed1274b6da2a49005ad567d92</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_e7cf713ed1274b6da2a49005ad567d92.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOYBV2cAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAhjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQxAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
MQAAAAAAAEgAAAACAAUAECIAAGwOAAABAAAAAAAAAHwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwBOAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyIwAAcG8SAAAKbxMAAAooFQAACgsCKBAAAApvEQAACnJjAABw
bxIAAApvEwAACigVAAAKDBYNFxMEFxMFK1IGKBYAAAosBBcNK0sCKBAAAApvFwAAChZypQAAcHK7
AABwEQWMHgAAAQeMHgAAASgYAAAKfhkAAAoWEgRvGgAAChEFBy8GCCgbAAAKEQUXWBMFEQUHMakC
KBAAAApvEQAACnIPAQBwbxIAAAoJjCEAAAFvHAAACgksMAIoEAAACm8XAAAKFnKlAABwcjMBAHAG
ckEBAHAoHQAACn4ZAAAKFhIEbxoAAAorLQIoEAAACm8XAAAKFnKlAABwclMBAHAGB4weAAABKBgA
AAp+GQAAChZvHgAACgIoEAAAChZvHwAACioeAiggAAAKKh4CKCEAAAoqrn4BAAAELR5yrQEAcNAD
AAACKCIAAApvIwAACnMkAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoJQAA
CioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAkBAAAI34A
AJAEAAAABgAAI1N0cmluZ3MAAAAAkAoAACACAAAjVVMAsAwAABAAAAAjR1VJRAAAAMAMAACsAQAA
I0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAJAAAAAUAAAAGAAAACQAAAAEAAAAl
AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAugMBAAAAAAAGAEMC
vAQGANICvAQGAI8BqQQPADAFAAAGALwBUAQGACYCUAQGAAcCUAQGALkCUAQGAGMCUAQGAHwCUAQG
ANMBUAQGAO4BGwMKAJcCaQMKAA4BaQMGAPID6wMGAHIBqQQGAMMF6wMGAHgE3AQGAGIEOwQOAEIB
pAMOAKMBpAMOACoBJgQGAFcBvAQKAJIDaQMSAHIFuQASAIcAuQAGAOUF6wMGALQANgAKAIgEaQMG
AAMA6wMGAEMD6wMGAHAACgMGAAME6wMGANkA6wMGAJAA6wMGAPEFUAQAAAAALQAAAAAAAQABAAEA
EAALBAkAOQABAAEAAAAQAOMEPwVFAAEAAwAAARAAfAU/BVkAAwAHAAMBAACVBQAAPQAEAAoAEQD3
A60AEQD+ALEAEQB3ALUABgZfALkAVoCFBbwAVoDeALwAUCAAAAAAhgARBAYAAQCqIQAAAACGGJwE
BgABALIhAAAAAIMYnAQGAAEAuiEAAAAAkwh0BMAAAQDmIQAAAACTCOYAxQABAO0hAAAAAJMI8gDK
AAEA9SEAAAAAlgjKBdAAAgD8IQAAAACGGJwEBgACAAQiAAAAAJEYogTVAAIAAAABAAQDCQCcBAEA
EQCcBAYAGQCcBAoAKQCcBBAAMQCcBBAAOQCcBBAAQQCcBBAASQCcBBAAUQCcBBAAWQCcBBAAYQCc
BBAAaQCcBAYAgQCcBAYAqQCcBBUAuQCcBAYAcQCNBSQAwQBuBSkAyQDiAy4A0QDwAjQAiQBBAzgA
2QABADwA4QCuBUEAwQCjBUYA+QC8BUsA+QD6BVIA6QAWBFUAAQFuBGAA0QD6AmUA+QC1BWoA6QA1
A3EAwQDWBQEAcQCcBAYAiQCcBAYAEQGiAHoAEQHtBYMAkQCcBIkAsQCcBAYACAAUAKMACAAYAKgA
KQBzABABLgALAOgALgATAPEALgAbABABLgAjABkBLgArAEIBLgAzAEIBLgA7AEIBLgBDABkBLgBL
AEgBLgBTAEIBLgBbAF8BQwBjAKgASQBzABABYQB7AKgAYwBrAKgAGwADAAEABAADAAAAeATZAAAA
BgHeAAAAzgXjAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAlSN7bgAAAAAAAAkAAAAE
AAAAAAAAAAAAAACRAGcAAAAAABAAAAAAAAAAAAAAAJoASgMAAAAABAAAAAAAAAAAAAAAkQDrAwAA
AAAQAAAAAAAAAAAAAACaAEAAAAAAAAAAAAABAAAA7QQAAAUAAgAAAAAAAFRvSW50MzIAU1RfZTdj
ZjcxM2VkMTI3NGI2ZGEyYTQ5MDA1YWQ1NjdkOTIAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5z
dGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBGaXJlV2FybmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZTdjZjcxM2VkMTI3NGI2ZGEyYTQ5MDA1YWQ1
NjdkOTIuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0
TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU2xlZXAAZ2V0X1Jlc291cmNlTWFu
YWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2U3Y2Y3
MTNlZDEyNzRiNmRhMmE0OTAwNWFkNTY3ZDkyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF9lN2NmNzEzZWQxMjc0YjZkYTJhNDkwMDVhZDU2N2Q5Mi5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAQ29udmVydABnZXRfQXNzZW1ibHkARW1wdHkAACFVAHMAZQByADoAOgBWAF8A
UABhAHQAaABGAGkAbABlAAA/JABQAGEAYwBrAGEAZwBlADoAOgBQAEsAXwBTAGMAcgBhAHAAZQBf
AE4AdQBtAEEAdAB0AGUAbQBwAHQAcwAAQSQAUABhAGMAawBhAGcAZQA6ADoAUABLAF8AUwBjAHIA
YQBwAGUAXwBUAGkAbQBlAEkAbgB0AGUAcgB2AGEAbAAAFUYAaQBsAGUAIABDAGgAZQBjAGsAAFNG
AGkAbABlACAAbgBvAHQAIABmAG8AdQBuAGQALgAgAFIAZQB0AHIAeQAgAGEAdAB0AGUAbQBwAHQA
IAB7ADAAfQAgAG8AZgAgAHsAMQB9AC4AACNVAHMAZQByADoAOgBWAF8ARgBsAGEAZwBfAEwAbwBh
AGQAAA1GAGkAbABlACAAJwABEScAIABmAG8AdQBuAGQALgABWUYAaQBsAGUAIAAnAHsAMAB9ACcA
IABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQAIABhAGYAdABlAHIAIAB7ADEAfQAgAHIAZQB0
AHIAaQBlAHMALgABcVMAVABfAGUANwBjAGYANwAxADMAZQBkADEAMgA3ADQAYgA2AGQAYQAyAGEA
NAA5ADAAMAA1AGEAZAA1ADYANwBkADkAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAMUI0V5uqGBBg+XYnZHg4lcABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEI
BwYOCAgCAggEIAASYQQgABJlBSABEmkcAyAAHAMgAA4EAAEIHAQAAQIOBCAAEnUGAAMODhwcAgYO
CiAGAQgODg4IEAIEAAEBCAQgAQEcBgADDg4ODgggBQEIDg4OCAgAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lN2NmNzEzZWQxMjc0YjZkYTJhNDkwMDVh
ZDU2N2Q5MgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABcMQAAAAAAAAAAAAB2MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaDEA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAHtulSMAAAEAe26VIz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZQA3AGMAZgA3ADEAMwBlAGQAMQAyADcANABiADYAZABhADIAYQA0ADkAMAAwADUA
YQBkADUANgA3AGQAOQAyAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADkAMQAwADkALgAyADgAMgA4ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AZQA3AGMAZgA3ADEAMwBlAGQAMQAyADcANABiADYAZABhADIAYQA0ADkAMAAwADUAYQBk
ADUANgA3AGQAOQAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBlADcAYwBmADcAMQAzAGUAZAAxADIANwA0AGIANgBkAGEAMgBhADQAOQAw
ADAANQBhAGQANQA2ADcAZAA5ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZQA3AGMAZgA3ADEAMwBlAGQAMQAyADcANABiADYAZABhADIAYQA0ADkAMAAw
ADUAYQBkADUANgA3AGQAOQAyAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA5ADEAMAA5AC4AMgA4ADIAOAAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADEAMAA5AC4AMgA4ADIAOAAzAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{34500d0b-8712-470c-9747-d196a71b3b28}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="[JSON Source].[LocalFilePath]">@[User::V_PathFolder_Full] + "\\" + @[User::V_FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\ETL\Add Log Metadata"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add Log Metadata"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ETL\Add Log Metadata.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\ETL\Add Log Metadata.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="3"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]"
                      name="SourceID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::PK_SourceID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::PK_SourceID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]"
                      name="CreatedBy"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)@[System::PackageID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]"
                      name="ModifiedBy"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)@[System::PackageID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)@[System::PackageID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                      dataType="date"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]"
                      name="CreatedDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[System::StartTime]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[System::StartTime]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\ETL\Add Log Metadata.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ETL\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ETL\Conditional Split.Inputs[Conditional Split Input].Columns[alpha-3Conv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="alpha-3Conv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\Conditional Split.Outputs[ValidRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="ValidRows"
                  synchronousInputId="Package\ETL\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]}) &amp;&amp; [LEN]([TRIM](#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]})) &gt; 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL([alpha-3Conv]) &amp;&amp; LEN(TRIM([alpha-3Conv])) &gt; 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\ETL\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\ETL\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ETL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[name]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[alpha-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-2"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-2]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[alpha-3]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-3"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-3]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[country-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="country-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[country-code]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[iso_3166-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[iso_3166-2]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[region]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[sub-region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub-region"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[intermediate-region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[region-code]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[sub-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="sub-region-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region-code]" />
                    <inputColumn
                      refId="Package\ETL\Data Conversion.Inputs[Data Conversion Input].Columns[intermediate-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region-code]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ETL\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[nameConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="255"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[nameConv]"
                      name="nameConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-2Conv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="2"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-2Conv]"
                      name="alpha-2Conv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[alpha-2]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="3"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]"
                      name="alpha-3Conv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[alpha-3]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[country-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="3"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[country-codeConv]"
                      name="country-codeConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[country-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[iso_3166-2Conv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="50"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[iso_3166-2Conv]"
                      name="iso_3166-2Conv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[iso_3166-2]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[regionConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="100"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[regionConv]"
                      name="regionConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[region]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-regionConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="100"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-regionConv]"
                      name="sub-regionConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[sub-region]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-regionConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="100"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-regionConv]"
                      name="intermediate-regionConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[region-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="3"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[region-codeConv]"
                      name="region-codeConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[region-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-region-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="3"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-region-codeConv]"
                      name="sub-region-codeConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[sub-region-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-region-codeConv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="3"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-region-codeConv]"
                      name="intermediate-region-codeConv"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region-code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ETL\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\DEST - Table MDM Td_Geo"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DEST - Table MDM Td_Geo"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[mdm].[Tm_Geo]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ETL\DEST - Table MDM Td_Geo.Connections[OleDbConnection]"
                  connectionManagerID="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  connectionManagerRefId="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[SourceID]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[CreatedBy]"
                      cachedDataType="guid"
                      cachedName="CreatedBy"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[ModifiedBy]"
                      cachedDataType="guid"
                      cachedName="ModifiedBy"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedBy]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[CreatedDate]"
                      cachedDataType="date"
                      cachedName="CreatedDate"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[nameConv]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="nameConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CountryName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[nameConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[alpha-2Conv]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="alpha-2Conv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[ISO2Code]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-2Conv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[alpha-3Conv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="alpha-3Conv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CountryID]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3Conv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[country-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="country-codeConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[country-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[iso_3166-2Conv]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2Conv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[ISO3166_2]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[iso_3166-2Conv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="regionConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[RegionName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[regionConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[sub-regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="sub-regionConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[SubRegionName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-regionConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[intermediate-regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="intermediate-regionConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[IntermediateRegionName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-regionConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="region-codeConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[RegionCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[region-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[sub-region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="sub-region-codeConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[SubRegionCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].Columns[intermediate-region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="intermediate-region-codeConv"
                      externalMetadataColumnId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[IntermediateRegionCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region-codeConv]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CountryName]"
                      dataType="wstr"
                      length="255"
                      name="CountryName" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[ISO2Code]"
                      dataType="wstr"
                      length="2"
                      name="ISO2Code" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CountryID]"
                      dataType="wstr"
                      length="3"
                      name="CountryID" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                      dataType="wstr"
                      length="3"
                      name="CountryCode" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[ISO3166_2]"
                      dataType="wstr"
                      length="50"
                      name="ISO3166_2" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[RegionName]"
                      dataType="wstr"
                      length="100"
                      name="RegionName" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[SubRegionName]"
                      dataType="wstr"
                      length="100"
                      name="SubRegionName" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[IntermediateRegionName]"
                      dataType="wstr"
                      length="100"
                      name="IntermediateRegionName" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[RegionCode]"
                      dataType="wstr"
                      length="3"
                      name="RegionCode" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[SubRegionCode]"
                      dataType="wstr"
                      length="3"
                      name="SubRegionCode" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[IntermediateRegionCode]"
                      dataType="wstr"
                      length="3"
                      name="IntermediateRegionCode" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[SourceID]"
                      dataType="wstr"
                      length="255"
                      name="SourceID" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                      dataType="guid"
                      name="CreatedBy" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedBy]"
                      dataType="guid"
                      name="ModifiedBy" />
                    <externalMetadataColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                      dataType="dbTimeStamp"
                      name="CreatedDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\DEST - Table MDM Td_Geo.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ETL\DEST - Table MDM Td_Geo.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ETL\DEST - Table MDM Td_Geo.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ETL\DEST - Table MDM Td_Geo.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\JSON Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2011-2024 KingswaySoft Inc."
              description="Retrieves JSON documents and extracts them into columns."
              name="JSON Source"
              usesDispositions="true"
              version="5">
              <properties>
                <property
                  dataType="System.String"
                  name="Design">[{"NodeType":1,"OutputType":"Output","OutputOrColumnName":"Root","Children":[{"NodeType":2,"OutputType":"None","Children":[{"NodeName":"name","NodeType":3,"OutputType":"Column","OutputOrColumnName":"name"},{"NodeName":"alpha-2","NodeType":3,"OutputType":"Column","OutputOrColumnName":"alpha-2"},{"NodeName":"alpha-3","NodeType":3,"OutputType":"Column","OutputOrColumnName":"alpha-3"},{"NodeName":"country-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"country-code"},{"NodeName":"iso_3166-2","NodeType":3,"OutputType":"Column","OutputOrColumnName":"iso_3166-2"},{"NodeName":"region","NodeType":3,"OutputType":"Column","OutputOrColumnName":"region"},{"NodeName":"sub-region","NodeType":3,"OutputType":"Column","OutputOrColumnName":"sub-region"},{"NodeName":"intermediate-region","NodeType":3,"OutputType":"Column","OutputOrColumnName":"intermediate-region"},{"NodeName":"region-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"region-code"},{"NodeName":"sub-region-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"sub-region-code"},{"NodeName":"intermediate-region-code","NodeType":3,"OutputType":"Column","OutputOrColumnName":"intermediate-region-code"}]}]}]</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when merging repeated values."
                  expressionType="Notify"
                  name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                <property
                  dataType="System.String"
                  description="Specifies the text delimiter to use when merging repeated values."
                  expressionType="Notify"
                  name="IsRepeatedTextDelimiter">Comma ( , )</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to read null values from the document."
                  expressionType="Notify"
                  name="NullMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonExtractNullMode">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the timzone to convert DateTimes to"
                  expressionType="Notify"
                  name="OutputTimezone"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.TimeZone">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the text encoding to use when reading the document."
                  expressionType="Notify"
                  name="Encoding">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if document node names are case insensitive."
                  expressionType="Notify"
                  name="NodeNamesAreCaseInsensitive">false</property>
                <property
                  dataType="System.String"
                  description="The relative path of the HTTP request that will be combined with the base path from the connection manager."
                  expressionType="Notify"
                  name="RelativePath"></property>
                <property
                  dataType="System.String"
                  description="The body of the HTTP request."
                  expressionType="Notify"
                  name="RequestBody"></property>
                <property
                  dataType="System.String"
                  description="The headers that will be used in the request."
                  expressionType="Notify"
                  name="RequestHeaders">[{"Key":"Accept","Value":{"IsExpression":false,"Value":"application/json"}}]</property>
                <property
                  dataType="System.String"
                  description="The query string parameters that will be used in the request."
                  expressionType="Notify"
                  name="RequestQueryStringParameters">[]</property>
                <property
                  dataType="System.String"
                  description="The expression that determines if requests should keep being sent."
                  expressionType="Notify"
                  name="RequestAgainRule"></property>
                <property
                  dataType="System.String"
                  description="The HTTP Method to use when sending requests."
                  expressionType="Notify"
                  name="HttpMethod">GET</property>
                <property
                  dataType="System.Null"
                  description="Specifies the name of the variable to get the json document from."
                  expressionType="Notify"
                  name="InputVariable" />
                <property
                  dataType="System.String"
                  description="Specifies the path to the Item to get the json document from."
                  expressionType="Notify"
                  name="LocalFilePath">C:\Users\hamed\Documents\Projects\DE\Dataset\PROD\Input\MasterData\Geo\References.json</property>
                <property
                  dataType="System.Int32"
                  description="The max number of identical requests that will be before an error is raised."
                  expressionType="Notify"
                  name="MaxIdenticalRequests">1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.JsonSourceComponent</property>
              </properties>
              <outputs>
                <output
                  refId="Package\ETL\JSON Source.Outputs[Root]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Root"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="KeyField"
                      name="KeyField">#{Package\ETL\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="RowIndexField"
                      name="RowIndexField">#{Package\ETL\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\ETL\-1:invalid}</property>
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[_RowIndex]"
                      dataType="i8"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[_RowIndex]"
                      name="_RowIndex"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[name]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[name]"
                      length="255"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-2]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[alpha-2]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-2]"
                      name="alpha-2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-3]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[alpha-3]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-3]"
                      name="alpha-3"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[country-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[country-code]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[country-code]"
                      name="country-code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[iso_3166-2]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[iso_3166-2]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[iso_3166-2]"
                      name="iso_3166-2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[region]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[region]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[region]"
                      name="region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[sub-region]"
                      length="255"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region]"
                      name="sub-region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[intermediate-region]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region]"
                      name="intermediate-region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[region-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[region-code]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[region-code]"
                      name="region-code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[sub-region-code]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region-code]"
                      name="sub-region-code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region-code]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[intermediate-region-code]"
                      length="50"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region-code]"
                      name="intermediate-region-code"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[_RowIndex]"
                      dataType="i8"
                      name="_RowIndex" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[name]"
                      dataType="wstr"
                      length="255"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[alpha-2]"
                      dataType="wstr"
                      length="50"
                      name="alpha-2" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[alpha-3]"
                      dataType="wstr"
                      length="50"
                      name="alpha-3" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[country-code]"
                      dataType="wstr"
                      length="50"
                      name="country-code" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[iso_3166-2]"
                      dataType="wstr"
                      length="50"
                      name="iso_3166-2" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[region]"
                      dataType="wstr"
                      length="50"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[sub-region]"
                      dataType="wstr"
                      length="255"
                      name="sub-region" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[intermediate-region]"
                      dataType="wstr"
                      length="50"
                      name="intermediate-region" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[region-code]"
                      dataType="wstr"
                      length="50"
                      name="region-code" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[sub-region-code]"
                      dataType="wstr"
                      length="50"
                      name="sub-region-code" />
                    <externalMetadataColumn
                      refId="Package\ETL\JSON Source.Outputs[Root].ExternalColumns[intermediate-region-code]"
                      dataType="wstr"
                      length="50"
                      name="intermediate-region-code" />
                  </externalMetadataColumns>
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\Lookup CountryID"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup CountryID"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [mdm].[Tm_Geo]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [mdm].[Tm_Geo]) [refTable]
where [refTable].[CountryID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CountryName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ISO2Code" dataType="DT_WSTR" length="2" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CountryID" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CountryCode" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ISO3166_2" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegionName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SubRegionName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IntermediateRegionName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegionCode" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SubRegionCode" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IntermediateRegionCode" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SourceID" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedBy" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ModifiedBy" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ETL\Lookup CountryID.Connections[OleDbConnection]"
                  connectionManagerID="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  connectionManagerRefId="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ETL\Lookup CountryID.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ETL\Lookup CountryID.Inputs[Lookup Input].Columns[alpha-3]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-3"
                      cachedSortKeyPosition="1"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CountryID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\Lookup CountryID.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\ETL\Lookup CountryID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Lookup CountryID.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\ETL\Lookup CountryID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Lookup CountryID.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\ETL\Lookup CountryID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Lookup CountryID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ETL\Lookup CountryID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ETL\Lookup CountryID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ETL\Lookup CountryID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\ETL\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[_RowIndex]"
                      cachedDataType="i8"
                      cachedName="_RowIndex"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[_RowIndex]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="name"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[name]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[alpha-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-2"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[alpha-3]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-3"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[alpha-3]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[country-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="country-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[country-code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[iso_3166-2]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[iso_3166-2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[region]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[sub-region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub-region"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[intermediate-region]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="region-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[region-code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[sub-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="sub-region-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[sub-region-code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[intermediate-region-code]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="intermediate-region-code"
                      lineageId="Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region-code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[nameConv]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="nameConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[nameConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[alpha-2Conv]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="alpha-2Conv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-2Conv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[alpha-3Conv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="alpha-3Conv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[country-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="country-codeConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[country-codeConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[iso_3166-2Conv]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2Conv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[iso_3166-2Conv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="regionConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[regionConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[sub-regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="sub-regionConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-regionConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[intermediate-regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="intermediate-regionConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-regionConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="region-codeConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[region-codeConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[sub-region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="sub-region-codeConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-region-codeConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ETL\Sort.Inputs[Sort Input].Columns[intermediate-region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="intermediate-region-codeConv"
                      lineageId="Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-region-codeConv]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[_RowIndex]"
                      dataType="i8"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[_RowIndex]"
                      name="_RowIndex">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[_RowIndex]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[name]"
                      name="name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-2]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-2]"
                      name="alpha-2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[alpha-2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3]"
                      name="alpha-3"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[alpha-3]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[country-code]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[country-code]"
                      name="country-code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[country-code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[iso_3166-2]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[iso_3166-2]"
                      name="iso_3166-2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[iso_3166-2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[region]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[region]"
                      name="region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region]"
                      name="sub-region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[sub-region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region]"
                      name="intermediate-region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[region-code]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[region-code]"
                      name="region-code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[region-code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region-code]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region-code]"
                      name="sub-region-code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[sub-region-code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region-code]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region-code]"
                      name="intermediate-region-code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\JSON Source.Outputs[Root].Columns[intermediate-region-code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[nameConv]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[nameConv]"
                      name="nameConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[nameConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-2Conv]"
                      dataType="wstr"
                      length="2"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-2Conv]"
                      name="alpha-2Conv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-2Conv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3Conv]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3Conv]"
                      name="alpha-3Conv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[alpha-3Conv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[country-codeConv]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[country-codeConv]"
                      name="country-codeConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[country-codeConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[iso_3166-2Conv]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[iso_3166-2Conv]"
                      name="iso_3166-2Conv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[iso_3166-2Conv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[regionConv]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[regionConv]"
                      name="regionConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[regionConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-regionConv]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-regionConv]"
                      name="sub-regionConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-regionConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-regionConv]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-regionConv]"
                      name="intermediate-regionConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-regionConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[region-codeConv]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[region-codeConv]"
                      name="region-codeConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[region-codeConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region-codeConv]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region-codeConv]"
                      name="sub-region-codeConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[sub-region-codeConv]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region-codeConv]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region-codeConv]"
                      name="intermediate-region-codeConv">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ETL\Data Conversion.Outputs[Data Conversion Output].Columns[intermediate-region-codeConv]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ETL\Update Table MDM Td_Geo"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Table MDM Td_Geo"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC [mdm].[usp_Update_Geo] 
                     @CountryName = ?,
	@ISO2Code = ?,
	@CountryID = ?,
	@CountryCode = ?,
	@ISO3166_2 = ?,
	@RegionName = ?,
	@SubRegionName = ?,
	@IntermediateRegionName = ?,
	@RegionCode = ?,
	@SubRegionCode = ?,
	@IntermediateRegionCode = ?,
	@SourceID = ?,
	@CreatedBy = ?,
	@ModifiedBy = ?,
	@CreatedDate = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ETL\Update Table MDM Td_Geo.Connections[OleDbConnection]"
                  connectionManagerID="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  connectionManagerRefId="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[nameConv]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="nameConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CountryName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[nameConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[alpha-2Conv]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="alpha-2Conv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@ISO2Code]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-2Conv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[alpha-3]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="alpha-3"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CountryID]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[alpha-3]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[country-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="country-codeConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CountryCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[country-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[iso_3166-2Conv]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="iso_3166-2Conv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@ISO3166_2]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[iso_3166-2Conv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="regionConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@RegionName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[regionConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[sub-regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="sub-regionConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@SubRegionName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-regionConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[intermediate-regionConv]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="intermediate-regionConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@IntermediateRegionName]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-regionConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="region-codeConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@RegionCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[region-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[sub-region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="sub-region-codeConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@SubRegionCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[sub-region-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[intermediate-region-codeConv]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="intermediate-region-codeConv"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@IntermediateRegionCode]"
                      lineageId="Package\ETL\Sort.Outputs[Sort Output].Columns[intermediate-region-codeConv]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[SourceID]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="SourceID"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@SourceID]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[SourceID]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[CreatedBy]"
                      cachedDataType="guid"
                      cachedName="CreatedBy"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CreatedBy]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedBy]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[ModifiedBy]"
                      cachedDataType="guid"
                      cachedName="ModifiedBy"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@ModifiedBy]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[ModifiedBy]" />
                    <inputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].Columns[CreatedDate]"
                      cachedDataType="date"
                      cachedName="CreatedDate"
                      externalMetadataColumnId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CreatedDate]"
                      lineageId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output].Columns[CreatedDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CountryName]"
                      dataType="wstr"
                      length="255"
                      name="@CountryName">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@ISO2Code]"
                      dataType="wstr"
                      length="2"
                      name="@ISO2Code">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CountryID]"
                      dataType="wstr"
                      length="3"
                      name="@CountryID">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CountryCode]"
                      dataType="wstr"
                      length="3"
                      name="@CountryCode">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@ISO3166_2]"
                      dataType="wstr"
                      length="50"
                      name="@ISO3166_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@RegionName]"
                      dataType="wstr"
                      length="100"
                      name="@RegionName">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@SubRegionName]"
                      dataType="wstr"
                      length="100"
                      name="@SubRegionName">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@IntermediateRegionName]"
                      dataType="wstr"
                      length="100"
                      name="@IntermediateRegionName">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@RegionCode]"
                      dataType="wstr"
                      length="3"
                      name="@RegionCode">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@SubRegionCode]"
                      dataType="wstr"
                      length="3"
                      name="@SubRegionCode">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@IntermediateRegionCode]"
                      dataType="wstr"
                      length="3"
                      name="@IntermediateRegionCode">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@SourceID]"
                      dataType="wstr"
                      length="255"
                      name="@SourceID">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CreatedBy]"
                      dataType="guid"
                      name="@CreatedBy">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@ModifiedBy]"
                      dataType="guid"
                      name="@ModifiedBy">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input].ExternalColumns[@CreatedDate]"
                      dataType="dbTimeStamp"
                      name="@CreatedDate">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ETL\Update Table MDM Td_Geo.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ETL\Update Table MDM Td_Geo.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ETL\Update Table MDM Td_Geo.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ETL\Update Table MDM Td_Geo.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ETL\Update Table MDM Td_Geo.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\ETL.Paths[Data Conversion Output]"
              endId="Package\ETL\Conditional Split.Inputs[Conditional Split Input]"
              name="Data Conversion Output"
              startId="Package\ETL\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ETL.Paths[Derived Column Output]"
              endId="Package\ETL\Lookup CountryID.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\ETL\Add Log Metadata.Outputs[Derived Column Output]" />
            <path
              refId="Package\ETL.Paths[Lookup Match Output]"
              endId="Package\ETL\Update Table MDM Td_Geo.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\ETL\Lookup CountryID.Outputs[Lookup Match Output]" />
            <path
              refId="Package\ETL.Paths[Lookup No Match Output]"
              endId="Package\ETL\DEST - Table MDM Td_Geo.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\ETL\Lookup CountryID.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\ETL.Paths[Root]"
              endId="Package\ETL\Data Conversion.Inputs[Data Conversion Input]"
              name="Root"
              startId="Package\ETL\JSON Source.Outputs[Root]" />
            <path
              refId="Package\ETL.Paths[Sort Output]"
              endId="Package\ETL\Add Log Metadata.Inputs[Derived Column Input]"
              name="Sort Output"
              startId="Package\ETL\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\ETL.Paths[ValidRows]"
              endId="Package\ETL\Sort.Inputs[Sort Input]"
              name="ValidRows"
              startId="Package\ETL\Conditional Split.Outputs[ValidRows]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Retrieve Countries from API Web"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{DE1F8650-30E6-493C-A0E6-B783928BE516}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Retrieve Countries from API Web"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">3,7,OnError,13,OnInformation,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_217f790900c140cbb4baf97957982ef2"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::V_ConnectionString,User::V_PathFile,$Package::PK_Link">
          <ProjectItem
            Name="ST_217f790900c140cbb4baf97957982ef2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{35A540AE-9BD8-4E48-B1BE-D610C22D9816}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_217f790900c140cbb4baf97957982ef2</RootNamespace>
    <AssemblyName>ST_217f790900c140cbb4baf97957982ef2</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_217f790900c140cbb4baf97957982ef2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_217f790900c140cbb4baf97957982ef2")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Http;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_217f790900c140cbb4baf97957982ef2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public async void Main()
        {
            // Ensure TLS 1.2 is used for secure connections
            System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12;

            bool fireAgain = false;

            try
            {
                // Get the file path and URL dynamically
                string filePath = Dts.Variables["User::V_PathFile"].Value.ToString();
                string url = Dts.Variables["$Package::PK_Link"].Value.ToString();

                Dts.Events.FireInformation(0, "Script Task", $"File Path: {filePath}", string.Empty, 0, ref fireAgain);
                Dts.Events.FireInformation(0, "Script Task", $"Fetching data from URL: {url}", string.Empty, 0, ref fireAgain);

                using (HttpClient client = new HttpClient())
                {
                    client.Timeout = TimeSpan.FromMinutes(5); // Set a timeout to avoid interruptions
                    client.DefaultRequestHeaders.ConnectionClose = true; // Ensure the connection is properly closed

                    HttpResponseMessage response = await client.GetAsync(url);
                    response.EnsureSuccessStatusCode(); // Throw an exception if the HTTP status code is not 2xx

                    string jsonResponse = await response.Content.ReadAsStringAsync();

                    // Write the content to the specified file path
                    System.IO.File.WriteAllText(filePath, jsonResponse);

                    Dts.Events.FireInformation(0, "Script Task", "API fetch and file write successful.", string.Empty, 0, ref fireAgain);
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task Error", $"Error: {ex.Message}\nStack Trace: {ex.StackTrace}", null, 0);

                // Call the stored procedure to log the error dynamically
                try
                {
                    using (SqlConnection conn = new SqlConnection(Dts.Connections["YourDatabaseConnectionManager"].ConnectionString))
                    {
                        conn.Open();
                        using (SqlCommand cmd = new SqlCommand("EXEC [tech].[usp_LogWarningDynamic] @WarningID, @SourceID, @SourceContext, @CreatedBy, @DynamicParams", conn))
                        {
                            cmd.Parameters.AddWithValue("@WarningID", 5); // Assuming WarningID for data retrieval error is 5
                            cmd.Parameters.AddWithValue("@SourceID", "API");
                            cmd.Parameters.AddWithValue("@SourceContext", "Data Retrieval");
                            cmd.Parameters.AddWithValue("@CreatedBy", Guid.NewGuid()); // Replace with actual package ID if needed

                            // Construct DynamicParams as JSON
                            string dynamicParams = $"[{{\"Key\":\"SourceObject\",\"Value\":\"{Dts.Variables["$Package::PK_Link"].Value}\"}},{{\"Key\":\"ErrorMessage\",\"Value\":\"{ex.Message}\"}}]";
                            cmd.Parameters.AddWithValue("@DynamicParams", dynamicParams);

                            cmd.ExecuteNonQuery();
                        }
                    }

                    Dts.Events.FireInformation(0, "Script Task", "Error logged successfully using stored procedure.", string.Empty, 0, ref fireAgain);
                }
                catch (Exception logEx)
                {
                    Dts.Events.FireError(0, "Script Task Error", $"Failed to log error. Log Error: {logEx.Message}", null, 0);
                }

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }












        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_217f790900c140cbb4baf97957982ef2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_217f790900c140cbb4baf97957982ef2</msb:DisplayName>
    <msb:ProjectId>{94E32873-469A-45CD-B7C0-E794B7DCD18F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_217f790900c140cbb4baf97957982ef2.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Settings.get_Default():ST_217f790900c140cbb4baf97957982ef2.Properties.Sett" +
    "ings")]

namespace ST_217f790900c140cbb4baf97957982ef2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_217f790900c140cbb4baf97957982ef2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_217f790900c140cbb4baf97957982ef2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_217f790900c140cbb4baf97957982ef2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALB4VWcAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAALj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANw+AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
PwAAAAAAAEgAAAACAAUAwCUAAGQYAAABAAAAAAAAACQ+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgArAAAAAQAAERIAKBQAAAp9CAAABBIAAn0JAAAEEgAV
fQcAAAQSAHwIAAAEEgAoAQAAKyoeAigWAAAKKh4CKBcAAAoqrn4BAAAELR5yAQAAcNADAAACKBgA
AApvGQAACnMaAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoGwAACioucwgA
AAaAAwAABCoAAAAbMAcAHwQAAAIAABECewcAAAQKAnsJAAAECwYXNhEgAAwAACgcAAAKAhZ9CgAA
BAAGF0OvAAAAAgcoHQAACm8eAAAKcnMAAHBvHwAACm8gAAAKbyEAAAp9CwAABAcoHQAACm8eAAAK
cpUAAHBvHwAACm8gAAAKbyEAAAoMBygdAAAKbyIAAAoWcrkAAHBy0QAAcAJ7CwAABCgjAAAKfiQA
AAoWAnwKAAAEbyUAAAoHKB0AAApvIgAAChZyuQAAcHLpAABwCCgjAAAKfiQAAAoWAnwKAAAEbyUA
AAoCcyYAAAp9DAAABAAGLHYGFzvYAAAAAnsMAAAEIwAAAAAAABRAKCcAAApvKAAACgJ7DAAABG8p
AAAKF3MqAAAKbysAAAoCewwAAAQIbywAAApvLQAAChMEEgQoLgAACi1BAhYlCn0HAAAEAhEEfQ0A
AAQCfAgAAAQSBAIoAgAAK93KAgAAAnsNAAAEEwQCfA0AAAT+FQMAABsCFSUKfQcAAAQSBCgwAAAK
JW8xAAAKJm8yAAAKbzMAAApvNAAAChMFEgUoNQAACi1BAhclCn0HAAAEAhEFfQ4AAAQCfAgAAAQS
BQIoAwAAK91hAgAAAnsOAAAEEwUCfA4AAAT+FQUAABsCFSUKfQcAAAQSBSg2AAAKDQJ7CwAABAko
NwAACgcoHQAACm8iAAAKFnK5AABwchsBAHB+JAAAChYCfAoAAARvJQAACt4YBhYvEwJ7DAAABCwL
AnsMAAAEbzgAAArcAhR9DAAABAcoHQAAChZvOQAACgIUfQsAAATdogEAABMGBygdAAAKbyIAAAoW
cmUBAHByiQEAcBEGbzoAAApymQEAcBEGbzsAAAooPAAAChQWbz0AAAomBygdAAAKbz4AAApytwEA
cG8/AAAKb0AAAApzQQAAChMHEQdvQgAACnLzAQBwEQdzQwAAChMIEQhvRAAACnLAAgBwG4w4AAAB
b0UAAAomEQhvRAAACnLWAgBwcuoCAHBvRQAACiYRCG9EAAAKcvICAHByEAMAcG9FAAAKJhEIb0QA
AApyLgMAcChGAAAKjDoAAAFvRQAACiZyRAMAcAcoHQAACm8eAAAKcpUAAHBvHwAACm8gAAAKEQZv
OgAACihHAAAKEwkRCG9EAAAKcuUDAHARCW9FAAAKJhEIb0gAAAom3hAGFi8LEQgsBxEIbzgAAArc
3hAGFi8LEQcsBxEHbzgAAArcBygdAAAKbyIAAAoWcrkAAHByAwQAcH4kAAAKFgJ8CgAABG8lAAAK
3i4TCgcoHQAACm8iAAAKFnJlAQBwcmcEAHARCm86AAAKKCMAAAoUFm89AAAKJt4ABygdAAAKF285
AAAK3gDeGRMLAh/+fQcAAAQCfAgAAAQRCyhJAAAK3hMCH/59BwAABAJ8CAAABChKAAAKKgBBlAAA
AgAAANsAAAA8AQAAFwIAABgAAAAAAAAAAgAAALwCAACtAAAAaQMAABAAAAAAAAAAAgAAAKcCAADU
AAAAewMAABAAAAAAAAAAAAAAAIYCAAAuAQAAtAMAAC4AAAAXAAABAAAAACQAAAAqAgAATgIAAKIB
AAAXAAABAAAAAA4AAADkAwAA8gMAABkAAAAXAAABNgJ8CAAABAMoSwAACioAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGgGAAAjfgAA1AYAALgJAAAjU3RyaW5ncwAAAACMEAAA
rAQAACNVUwA4FQAAEAAAACNHVUlEAAAASBUAABwDAAAjQmxvYgAAAAAAAAACAAABVx+iCwkLAAAA
+gEzABYAAAEAAAA7AAAABgAAAA4AAAALAAAAAgAAAAEAAABLAAAAAgAAABMAAAACAAAAAgAAAAMA
AAAEAAAAAgAAAAUAAAABAAAABgAAAAEAAAACAAAAAwAAAAAAegUBAAAAAAAGAAgEXwcGAJcEXwcG
ACEDTAcPANMHAAAGAE4DKwYGAOsDKwYGAMwDKwYGAH4EKwYGACgEKwYGAEEEKwYGAIADKwYGAJsD
0gQKAFwEKQUKAHICKQUGAD0CwAUGAGUDXwcGAMcFwAUGAOkCXwcGACMCwAUGAPMBXwcGACUAXwcO
AIEBmwYGAHIGwAUSAGEGMQkSADMBMQkGAKsGXwcOAEcJmwYGALQDTAcGAAQDTAcGAPAIwAUGANMG
fwcGAI8GFgYWAMkCZAUWADUDZAUWAI4CAQYGAKoBwAUGAJYJKwYWAPUG9wgWAC0C9wgKAFIFKQUa
ABUI0wEaAJUB0wEKAAkHKQUGAAMFwAUGANgFwAUOAH0IZQgGABMAwAUGAB4APggOAF4JmwYGAM4B
mQAGAJ4BwAUaAFkI0wEaAOMG0wESAFQGfAYSAD0GMQkGADMAwAUSAB0HMQkGACQBwAUSACkBfAYA
AAAAkAAAAAAAAQABAAEAEADmBVAAOQABAAEAAAAQAIYH4gd5AAEAAwAAARAAKwjiB40AAwAHAAMB
AADJCAAARQAEAAoAAwEQAAEAAABNAAcACgARAMwFvAERAGICwAERAE0BxQEGBsIAyQFWgLkIzAFW
gEICzAEGAN4CyQEGAMIG0AEGADQI1AEBADkA2AEBAHQAoQABAIMA2wEBAAwA3wEBAEkA5wFQIAAA
AACGAOwFBgABAIcgAAAAAIYYPwcGAAEAjyAAAAAAgxg/BwYAAQCXIAAAAACTCM8G7gEBAMMgAAAA
AJMISgLzAQEAyiAAAAAAkwhWAvkBAQDSIAAAAACWCAIJAAICANkgAAAAAIYYPwcGAAIA4SAAAAAA
kRhFBwUCAgDwIAAAAADhAXwJBgACALAlAAAAAOEBBgIbAAIAAAABAMwEAAABABYCBgBRAAkAPwcB
ABEAPwcGABkAPwcKACkAPwcQADEAPwcQADkAPwcQAEEAPwcQAEkAPwcQAFEAPwcQAFkAPwcQAGEA
PwcQAGkAPwcGAIEAPwcVAJEAPwcGAKEAfAkGAKEABgIbAOEAPwcGAOkAPwcGABEBPwchANEAwgIt
ANEAagkyAHEAPwcGAPEAPwcGAHkAvAE/AHkAkglHAPkAPwdNABkBPwcGADEBogVzAHEAwQh6AEEB
EQiAAEkBtwWGAFEBtQSNAPEAAQWRAEEB1wiVAGEB4gibAGEBrwmhAFkB8QWkANkAPwcGAGkBHwiv
ANkAcAm2ANkAkAi9AAwAPwfKAHEBpgLQANkA8QDaABQAKgftABwAEQH9ANEA+gABARwAHQkXAbEA
XQEcAbEAUgkhAYkB3wAnASQAKgftACwAEQH9ACwAHQkXAZEBhQlHAZkBugIGAEEBDgkBALkAdQGR
ALkAPgGRAGEB4ghNAVkBNQdVAUEBVQheAaEBtwVkAakB7ASRAMEAPwcQALEB4QUGAMkAPwdrAckA
qghyAbkBvwR4AdEBIQGAAWEB6QiGAdkBnwmNAdEAbwaRAdEAJwkGANEABgIbAAgAFACyAQgAGAC3
ASAAawDaAikAmwBBAi4ACwAZAi4AEwAiAi4AGwBBAi4AIwBKAi4AKwBzAi4AMwBzAi4AOwBzAi4A
QwBKAi4ASwB5Ai4AUwBzAi4AWwCQAkMAYwC3AUkAmwBBAmEAcwC3AWMAkwC3AcMAcwC3AWABiwC3
ASgAVQADAAEABAADAAAA0wYJAgAAagIOAgAABgkUAgIABAADAAIABQAFAAEABgAFAAIABwAHAAYA
FAAfAAYAFgAhAMMA5QD2ADABNwEEgAAAAQAAAJQjoFIAAAAAAABQAAAABAAAAAAAAAAAAAAAlwHW
AAAAAAAQAAAAAAAAAAAAAACgAQoFAAAAAAQAAAAAAAAAAAAAAKkBmwYAAAAABAAAAAAAAAAAAAAA
lwHKAAAAAAAEAAAAAAAAAAAAAACXAcAFAAAAABAAAAAAAAAAAAAAAKABowAAAAAAAAAAAAEAAACQ
BwAABQACAAYAAgArADoAXwAMAV8APQEAAAAAADxNYWluPmRfXzAAPD51X18xAE51bGxhYmxlYDEA
VGFza2AxAFRhc2tBd2FpdGVyYDEASW50MzIAPGZpcmVBZ2Fpbj41X18yADw+dV9fMgBTVF8yMTdm
NzkwOTAwYzE0MGNiYjRiYWY5Nzk1Nzk4MmVmMgA8ZmlsZVBhdGg+NV9fMwA8Y2xpZW50PjVfXzQA
PE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAG1zY29ybGliAFJlYWRBc1N0cmluZ0FzeW5jAEdldEFzeW5jAEF3YWl0VW5z
YWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxldGVkAE5ld0d1aWQARGJDb21tYW5kAFNxbENvbW1h
bmQAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NTdGF0dXNDb2Rl
AGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNo
aW5lAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UAc2V0X0Nvbm5lY3Rpb25DbG9zZQBEaXNwb3NlAENyZWF0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFfX3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGlu
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAQWRkV2l0aFZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzIxN2Y3OTA5MDBjMTQwY2JiNGJhZjk3OTU3OTgyZWYyLmRsbABzZXRfU2VjdXJpdHlQ
cm90b2NvbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBUaW1lU3BhbgBPcGVuAFNj
cmlwdE1haW4ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25u
ZWN0aW9uAFNxbENvbm5lY3Rpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0
dXJlSW5mbwBTeXN0ZW0uTmV0Lkh0dHAAQXN5bmNWb2lkTWV0aG9kQnVpbGRlcgA8PnRfX2J1aWxk
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5h
Z2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3FsUGFyYW1ldGVyAEdldEF3YWl0ZXIARmlyZUVycm9y
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzIxN2Y3OTA5MDBjMTQwY2JiNGJhZjk3OTU3OTgy
ZWYyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8yMTdm
NzkwOTAwYzE0MGNiYjRiYWY5Nzk1Nzk4MmVmMi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMARnJv
bU1pbnV0ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAZ2V0X0Nv
bm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRf
RGVmYXVsdFJlcXVlc3RIZWFkZXJzAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3Jp
cHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAU3lzdGVtLk5ldABnZXRf
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABHZXRSZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNx
bENsaWVudABIdHRwQ2xpZW50AGdldF9Db250ZW50AEh0dHBDb250ZW50AFN0YXJ0AHNldF9UaW1l
b3V0AE1vdmVOZXh0AFdyaXRlQWxsVGV4dABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AEVt
cHR5AAAAAABxUwBUAF8AMgAxADcAZgA3ADkAMAA5ADAAMABjADEANAAwAGMAYgBiADQAYgBhAGYA
OQA3ADkANQA3ADkAOAAyAGUAZgAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAhVQBzAGUAcgA6ADoAVgBfAFAAYQB0AGgARgBpAGwAZQAAIyQAUABhAGMAawBhAGcA
ZQA6ADoAUABLAF8ATABpAG4AawAAF1MAYwByAGkAcAB0ACAAVABhAHMAawAAF0YAaQBsAGUAIABQ
AGEAdABoADoAIAAAMUYAZQB0AGMAaABpAG4AZwAgAGQAYQB0AGEAIABmAHIAbwBtACAAVQBSAEwA
OgAgAABJQQBQAEkAIABmAGUAdABjAGgAIABhAG4AZAAgAGYAaQBsAGUAIAB3AHIAaQB0AGUAIABz
AHUAYwBjAGUAcwBzAGYAdQBsAC4AACNTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIABFAHIAcgBvAHIA
AA9FAHIAcgBvAHIAOgAgAAAdCgBTAHQAYQBjAGsAIABUAHIAYQBjAGUAOgAgAAA7WQBvAHUAcgBE
AGEAdABhAGIAYQBzAGUAQwBvAG4AbgBlAGMAdABpAG8AbgBNAGEAbgBhAGcAZQByAACAy0UAWABF
AEMAIABbAHQAZQBjAGgAXQAuAFsAdQBzAHAAXwBMAG8AZwBXAGEAcgBuAGkAbgBnAEQAeQBuAGEA
bQBpAGMAXQAgAEAAVwBhAHIAbgBpAG4AZwBJAEQALAAgAEAAUwBvAHUAcgBjAGUASQBEACwAIABA
AFMAbwB1AHIAYwBlAEMAbwBuAHQAZQB4AHQALAAgAEAAQwByAGUAYQB0AGUAZABCAHkALAAgAEAA
RAB5AG4AYQBtAGkAYwBQAGEAcgBhAG0AcwAAFUAAVwBhAHIAbgBpAG4AZwBJAEQAABNAAFMAbwB1
AHIAYwBlAEkARAAAB0EAUABJAAAdQABTAG8AdQByAGMAZQBDAG8AbgB0AGUAeAB0AAAdRABhAHQA
YQAgAFIAZQB0AHIAaQBlAHYAYQBsAAAVQABDAHIAZQBhAHQAZQBkAEIAeQAAgJ9bAHsAewAiAEsA
ZQB5ACIAOgAiAFMAbwB1AHIAYwBlAE8AYgBqAGUAYwB0ACIALAAiAFYAYQBsAHUAZQAiADoAIgB7
ADAAfQAiAH0AfQAsAHsAewAiAEsAZQB5ACIAOgAiAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACIA
LAAiAFYAYQBsAHUAZQAiADoAIgB7ADEAfQAiAH0AfQBdAAAdQABEAHkAbgBhAG0AaQBjAFAAYQBy
AGEAbQBzAABjRQByAHIAbwByACAAbABvAGcAZwBlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwA
eQAgAHUAcwBpAG4AZwAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUALgAAQUYAYQBp
AGwAZQBkACAAdABvACAAbABvAGcAIABlAHIAcgBvAHIALgAgAEwAbwBnACAARQByAHIAbwByADoA
IAAAAAAANQrnw6A/EEav1S4VUGaZfwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESPQUgAQESUQYg
AQERgIUEBwERGAQAABFpBzABAQEQHgAECgERGAcAARI9EYCRBSAAEoCVByACAQ4SgJUdBwwIEggO
DhURVQESWRURVQEOEl0SYRJlDhJdEl0GAAEBEYCdBSAAEoChBSAAEoClBiABEoCpHAMgABwDIAAO
BSAAEoCtBQACDg4OAgYOCiAGAQgODg4IEAIGAAERgLUNBiABARGAtQUgABKAuQYVEYC9AQIFIAEB
EwAJIAEBFRGAvQECCiABFRKAwQESWQ4HFRKAwQESWQggABURVQETAAYVEVUBElkDIAACCjACAgEQ
HgAQHgEKCgIVEVUBElkRGAQgABMABCAAElkFIAASgMUIIAAVEoDBAQ4GFRKAwQEOBRURVQEOCQoC
FRFVAQ4RGAUAAgEODgcABA4ODg4OCCAFAggODg4IBSAAEoDRBiABEoDVHAYgAgEOEmEFIAASgN0H
IAISgOUOHAUAABGA6QYAAw4OHBwDIAAIBSABARJdCLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6
BAAAAAAEAQAAAAMGEn0EBhKAgQMGEhACBggDBhEUAwYRaQMGEggCBgIDBhJtBwYVEVUBElkGBhUR
VQEOBAAAEn0FAAASgIEGAAEBEoCBBAAAEhADAAABBAgAEn0FCAASgIEECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMjE3Zjc5MDkwMGMx
NDBjYmI0YmFmOTc5NTc5ODJlZjIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0Ljc+AQA5U1RfMjE3Zjc5MDkwMGMxNDBjYmI0YmFmOTc5NTc5ODJlZjIuU2NyaXB0
TWFpbis8TWFpbj5kX18wAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAABD8AAAAAAAAAAAAAHj8AAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAABA/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAoFKUIwAAAQCgUpQjPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAyADEANwBmADcAOQAwADkAMAAwAGMAMQA0ADAAYwBiAGIANABiAGEAZgA5ADcAOQA1ADcAOQA4
ADIAZQBmADIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAxADAA
OAAuADIAMQAxADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAy
ADEANwBmADcAOQAwADkAMAAwAGMAMQA0ADAAYwBiAGIANABiAGEAZgA5ADcAOQA1ADcAOQA4ADIA
ZQBmADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADIAMQA3AGYANwA5ADAAOQAwADAAYwAxADQAMABjAGIAYgA0AGIAYQBmADkANwA5ADUA
NwA5ADgAMgBlAGYAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwAyADEANwBmADcAOQAwADkAMAAwAGMAMQA0ADAAYwBiAGIANABiAGEAZgA5ADcAOQA1ADcA
OQA4ADIAZQBmADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADkAMQAwADgALgAyADEAMQA1ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADkAMQAwADgALgAyADEAMQA1ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Table LOG Tl_BusinessWarnings"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D17A6257-6C17-4079-AC9B-7C20D5A4CD8B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Table LOG Tl_BusinessWarnings"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{6E051E37-C57C-4D74-9CB4-5477699E2674}"
          DTS:EventID="2228339"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{C541D5AF-FB3C-413D-BA2B-0858C11FF7F7}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnError]\Log Package Execution"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c66c0d48-af94-43cc-8124-f4df08c55eee}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log Package Execution"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
                  SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Fail' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.ExecutionStatus = Source.ExecutionStatus&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="System::PackageID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="System::PackageName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="255" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="System::CreationDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="System::PackageID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="System::StartTime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{47CBB4D6-1842-4D86-B6E1-842B9F46F8ED}"
          DTS:EventID="2883618"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{22FC5F32-7B0D-46CA-9105-D70B9C6FDA39}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnPostExecute]\Log Package Execution"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1c8d7ec1-f4be-48b0-86c7-3572cd52a39a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log Package Execution"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
                  SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Success' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.ExecutionStatus = Source.ExecutionStatus&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="System::PackageID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="System::PackageName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="255" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="System::CreationDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="System::PackageID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="System::StartTime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnTaskFailed]"
          DTS:CreationName="OnTaskFailed"
          DTS:DTSID="{7D66A43E-140A-482B-BDE7-55DCFABE56B7}"
          DTS:EventID="7340144"
          DTS:EventName="OnTaskFailed"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{9D9AE840-F461-4B13-86FA-4024047D289F}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnTaskFailed]\Log Package Execution"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{b1c968fd-e0ad-4b47-ab13-1113240e5bc7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log Package Execution"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
                  SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Fail' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.ExecutionStatus = Source.ExecutionStatus&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="System::PackageID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="System::PackageName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="255" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="System::CreationDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="System::PackageID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="System::StartTime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="EXEC [tech].[usp_LogWarningDynamic]&#xA;    @WarningID = 7,&#xA;    @SourceID = ?,&#xA;    @SourceContext = ?,&#xA;    @SourceObject = ?,&#xA;    @CreatedBy = ?,&#xA;    @DynamicParams = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::PK_SourceID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="$Package::PK_SourceContext"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="$Package::PK_Link"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="4"
            SQLTask:DtsVariableName="User::V_JSONParam"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{74A43D30-504D-4113-A878-3CC370281602}"
      DTS:From="Package\Retrieve Countries from API Web"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check file existence" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B77DE61C-1C78-4D91-95E0-D6E1BF8B46F2}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::V_RowCount_Errors] == 0"
      DTS:From="Package\Check Errors"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\ETL" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{BD916ADA-54B8-4CD3-B054-298E47699E95}"
      DTS:From="Package\ETL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Archive File Success" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{F8C37335-7382-4820-8057-DC02EFEC7E3E}"
      DTS:EvalOp="4"
      DTS:Expression="@[User::V_RowCount_Errors] &gt; 0"
      DTS:From="Package\Check Errors"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Archive File Failure"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{5AD02467-6B4E-44A8-A8DF-F062000A8228}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::V_Flag_Load]"
      DTS:From="Package\Check file existence"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check Errors" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{02C844A9-E13D-4AD2-92F9-AA474CBC82DD}"
      DTS:EvalOp="3"
      DTS:Expression="!@[User::V_Flag_Load]"
      DTS:From="Package\Check file existence"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Update Table LOG Tl_BusinessWarnings" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{8FC2395C-7780-4004-93DF-57C4673BE2F2}"
      DTS:EventID="61057376"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{85C2CB1F-C265-4DD4-87EE-7F9CE8A19A4C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log Package Execution"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4bb48d2c-c6be-4137-af30-c53f8b83dfb6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Package Execution"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
              SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Fail' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.ExecutionStatus = Source.ExecutionStatus&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::CreationDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{0B7DC57B-465B-4A17-923C-7D10F2277D8A}"
      DTS:EventID="1962961920"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{50CD4C9A-D9C4-4C81-B4A1-035F15DDE50F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log Package Execution"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4d27d4bd-1efb-47ca-9bf0-c1aec5911088}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Package Execution"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A6C2FA13-0FE1-4995-A3F3-1201982E676A}"
              SQLTask:SqlStatementSource="-- Ensure the package exists in Tl_Packages&#xA;MERGE INTO [log].[Tl_Packages] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId, -- System::PackageID&#xA;  ? AS PackageName, -- System::PackageName&#xA;  CAST(? AS DATETIME) AS CreatedDate, -- System::CreationDate&#xA;  1 AS IsActive -- Active status&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.PackageName = Source.PackageName, -- Update name if necessary&#xA;   Target.IsActive = Source.IsActive -- Maintain active status&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   PackageName,&#xA;   CreatedDate,&#xA;   IsActive&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.PackageName,&#xA;   Source.CreatedDate,&#xA;   Source.IsActive&#xA;   );&#xA;&#xA;-- Log the package execution in Tl_Exec&#xA;MERGE INTO [log].[Tl_Exec] AS Target&#xA;USING (&#xA; SELECT &#xA;  ? AS PackageId,&#xA;  CAST(? AS DATETIME) AS RunTime,&#xA;  'Success' AS ExecutionStatus&#xA; ) AS Source&#xA; ON Target.PackageId = Source.PackageId&#xA;  AND Target.RunTime = Source.RunTime&#xA;WHEN MATCHED&#xA; THEN&#xA;  UPDATE&#xA;  SET &#xA;   Target.ExecutionStatus = Source.ExecutionStatus&#xA;WHEN NOT MATCHED&#xA; THEN&#xA;  INSERT (&#xA;   PackageId,&#xA;   RunTime,&#xA;   ExecutionStatus&#xA;   )&#xA;  VALUES (&#xA;   Source.PackageId,&#xA;   Source.RunTime,&#xA;   Source.ExecutionStatus&#xA;   );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::CreationDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167.333333333334,41.3333333333334"
          Id="Package\Archive File Failure"
          TopLeft="621.142857924408,420.470587917575" />
        <NodeLayout
          Size="172.666666666667,41.3333333333334"
          Id="Package\Archive File Success"
          TopLeft="262.857143086742,414.176470318107" />
        <NodeLayout
          Size="139.333333333334,42.6666666666667"
          Id="Package\Check Errors"
          TopLeft="434.482143420688,187.882352787009" />
        <NodeLayout
          Size="172,41.3333333333334"
          Id="Package\Check file existence"
          TopLeft="443,83" />
        <NodeLayout
          Size="101.333333333334,41.3333333333334"
          Id="Package\ETL"
          TopLeft="301.071429222974,283.247058668692" />
        <NodeLayout
          Size="233.333333333334,41.3333333333334"
          Id="Package\Retrieve Countries from API Web"
          TopLeft="411.642857525269,10.3529411375934" />
        <NodeLayout
          Size="267.333333333334,41.3333333333334"
          Id="Package\Update Table LOG Tl_BusinessWarnings"
          TopLeft="746,200.350000030994" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="528.654762095968,51.6862744709267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3137255290733"
              Start="0,0"
              End="0,23.8137255290733">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8137255290733" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="482.259921198466,230.549019453676">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-130.521825308825,52.6980392150163"
              Start="0,0"
              End="-130.521825308825,45.1980392150163">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.4381805699688" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.4381805699688"
                    Point2="0,21.4381805699688"
                    Point3="-4,21.4381805699688" />
                  <mssgle:LineSegment
                    End="-126.521825308825,21.4381805699688" />
                  <mssgle:CubicBezierSegment
                    Point1="-126.521825308825,21.4381805699688"
                    Point2="-130.521825308825,21.4381805699688"
                    Point3="-130.521825308825,25.4381805699688" />
                  <mssgle:LineSegment
                    End="-130.521825308825,45.1980392150163" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.2609126544125,26.4381805699688,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="350.464286154858,324.580392002025">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89.5960783160817"
              Start="0,0"
              End="0,82.0960783160817">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.0960783160817" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="526.037698976244,230.549019453676">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="178.771825614831,189.921568463899"
              Start="0,0"
              End="178.771825614831,182.421568463899">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.2623220808673" />
                  <mssgle:CubicBezierSegment
                    Point1="0,73.2623220808673"
                    Point2="0,77.2623220808673"
                    Point3="4,77.2623220808673" />
                  <mssgle:LineSegment
                    End="174.771825614831,77.2623220808673" />
                  <mssgle:CubicBezierSegment
                    Point1="174.771825614831,77.2623220808673"
                    Point2="178.771825614831,77.2623220808673"
                    Point3="178.771825614831,81.2623220808673" />
                  <mssgle:LineSegment
                    End="178.771825614831,182.421568463899" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="65.2759128074155,82.2623220808673,48.22,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="502.907738377011,124.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.5490194536757"
              Start="0,0"
              End="0,56.0490194536757">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.0490194536757" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,20.0245097268378,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="556.333333333333,124.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="323.333333333333,76.0166666976607"
              Start="0,0"
              End="323.333333333333,68.5166666976607">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8270353428301" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.8270353428301"
                    Point2="0,30.8270353428301"
                    Point3="4,30.8270353428301" />
                  <mssgle:LineSegment
                    End="319.333333333333,30.8270353428301" />
                  <mssgle:CubicBezierSegment
                    Point1="319.333333333333,30.8270353428301"
                    Point2="323.333333333333,30.8270353428301"
                    Point3="323.333333333333,34.8270353428301" />
                  <mssgle:LineSegment
                    End="323.333333333333,68.5166666976607" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="153.666666666667,35.8270353428301,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186.666666666667,41.3333333333334"
          Id="Package.EventHandlers[OnError]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186.666666666667,41.3333333333334"
          Id="Package.EventHandlers[OnPostExecute]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Check Errors">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="130,42"
          Id="Package\Check Errors\Row Count"
          TopLeft="330.71428641829,240.882352730034" />
        <NodeLayout
          Size="154.666666666667,42"
          Id="Package\Check Errors\Data Conversion"
          TopLeft="315.000000670552,121.588235187541" />
        <NodeLayout
          Size="182,42"
          Id="Package\Check Errors\Build JSON Parameter"
          TopLeft="307.85714351249,337.811764436424" />
        <NodeLayout
          Size="206,42"
          Id="Package\Check Errors\Add Warning Log Metadata"
          TopLeft="295.714286343784,436.199999715125" />
        <NodeLayout
          Size="140,42.6666666666667"
          Id="Package\Check Errors\JSON Source"
          TopLeft="320.714286397002,12.999999988605" />
        <NodeLayout
          Size="266,42"
          Id="Package\Check Errors\Update Table LOG Tl_BusinessWarnings"
          TopLeft="269.017857627715,527.45882309372" />
        <EdgeLayout
          Id="Package\Check Errors.Paths[Row Count Output 1]"
          TopLeft="397.08571496539,282.482352730034">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.3294117063903"
              Start="0,0"
              End="0,47.8294117063903">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.8294117063903" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check Errors.Paths[Root]"
          TopLeft="391.523810200444,55.6666666552717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.9215685322693"
              Start="0,0"
              End="0,58.4215685322693">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.4215685322693" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check Errors.Paths[Output 0]"
          TopLeft="398.785714928137,379.411764436424">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.7882352787007"
              Start="0,0"
              End="0,49.2882352787007">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.2882352787007" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check Errors.Paths[Derived Column Output]"
          TopLeft="400.366071985749,478.199999715125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.258823378595"
              Start="0,0"
              End="0,41.758823378595">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.758823378595" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check Errors.Paths[Data Conversion Error Output]"
          TopLeft="394.057143544421,163.188235187541">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77.6941175424927"
              Start="0,0"
              End="0,70.1941175424927">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.1941175424927" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-66.08638671875,29.3802618962464,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\ETL">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155.333333333334,41.3333333333334"
          Id="Package\ETL\Data Conversion"
          TopLeft="320.714286397002,121.588235187541" />
        <NodeLayout
          Size="208,42.6666666666667"
          Id="Package\ETL\DEST - Table MDM Td_Geo"
          TopLeft="176.428571804142,632.352940955273" />
        <NodeLayout
          Size="208,41.3333333333334"
          Id="Package\ETL\Update Table MDM Td_Geo"
          TopLeft="477.142858158569,639.647058588926" />
        <NodeLayout
          Size="102,47.3333333333334"
          Id="Package\ETL\Sort"
          TopLeft="337.857143576352,335.705882081472" />
        <NodeLayout
          Size="139.333333333334,41.3333333333334"
          Id="Package\ETL\JSON Source"
          TopLeft="323.701296882335,3.24706919584322" />
        <NodeLayout
          Size="164,41.3333333333334"
          Id="Package\ETL\Lookup CountryID"
          TopLeft="310.089286403655,503.764705619598" />
        <NodeLayout
          Size="153.333333333334,41.3333333333334"
          Id="Package\ETL\Conditional Split"
          TopLeft="313.57142923894,241.647058611716" />
        <NodeLayout
          Size="164,41.3333333333334"
          Id="Package\ETL\Add Log Metadata"
          TopLeft="305.714286365071,422.588235039406" />
        <EdgeLayout
          Id="Package\ETL.Paths[Data Conversion Output]"
          TopLeft="394.342857817971,163.188235187541">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78.458823424175"
              Start="0,0"
              End="0,70.958823424175">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.958823424175" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.Paths[ValidRows]"
          TopLeft="389.547619740979,282.980391945049">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.7254901364226"
              Start="0,0"
              End="0,45.2254901364226">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.2254901364226" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.35076171875,17.7382333494613,46.7015234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.Paths[Sort Output]"
          TopLeft="388.285714970712,383.039215414805">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.5490196246007"
              Start="0,0"
              End="0,32.0490196246007">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.0490196246007" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.Paths[Root]"
          TopLeft="395.807791639668,44.8470691958432">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76.7411659916978"
              Start="0,0"
              End="0,69.2411659916978">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.2411659916978" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.Paths[Lookup No Match Output]"
          TopLeft="366.089286403655,545.098038952931">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-85.660714599513,87.2549020023417"
              Start="0,0"
              End="-85.660714599513,79.7549020023417">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4077863197908" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.4077863197908"
                    Point2="0,35.4077863197908"
                    Point3="-4,35.4077863197908" />
                  <mssgle:LineSegment
                    End="-81.660714599513,35.4077863197908" />
                  <mssgle:CubicBezierSegment
                    Point1="-81.660714599513,35.4077863197908"
                    Point2="-85.660714599513,35.4077863197908"
                    Point3="-85.660714599513,39.4077863197908" />
                  <mssgle:LineSegment
                    End="-85.660714599513,79.7549020023417" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-98.6367440185065,40.4077863197908,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.Paths[Lookup Match Output]"
          TopLeft="418.089286403655,545.098038952931">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="163.053571754914,94.5490196359948"
              Start="0,0"
              End="163.053571754914,87.0490196359948">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3677181131573" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.3677181131573"
                    Point2="0,38.3677181131573"
                    Point3="4,38.3677181131573" />
                  <mssgle:LineSegment
                    End="159.053571754914,38.3677181131573" />
                  <mssgle:CubicBezierSegment
                    Point1="159.053571754914,38.3677181131573"
                    Point2="163.053571754914,38.3677181131573"
                    Point3="163.053571754914,42.3677181131573" />
                  <mssgle:LineSegment
                    End="163.053571754914,87.0490196359948" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="33.335399158707,43.3677181131573,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.Paths[Derived Column Output]"
          TopLeft="389.901786384363,463.921568372739">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.8431372468586"
              Start="0,0"
              End="0,32.3431372468586">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3431372468586" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\DEST - Table MDM Td_Geo">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Lookup CountryID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[mdm].[Tm_Geo]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnTaskFailed]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnPostExecute]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Update Table LOG Tl_BusinessWarnings.EventHandlers[OnError]\Log Package Execution"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>