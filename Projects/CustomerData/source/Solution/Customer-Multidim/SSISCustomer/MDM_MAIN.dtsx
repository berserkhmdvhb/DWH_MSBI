<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/2/2025 3:29:14 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LU-GZMRLS3"
  DTS:CreatorName="AzureAD\HamedVAHEB"
  DTS:DTSID="{66001C3E-6DCD-4369-8B5B-3CE4D1C396F8}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="MDM_MAIN"
  DTS:PackageType="5"
  DTS:VersionBuild="35"
  DTS:VersionGUID="{3279A42E-8EEB-468F-9A9E-F0AC45BC95A3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3DE2E609-DA08-49B5-A948-CB0094D8B28C}"
      DTS:ObjectName="PK_Link">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://raw.githubusercontent.com/berserkhmdvhb/DWH_MSBI/refs/heads/main/Projects/CustomerData/Dataset/PROD/Input/MasterData/Geo/References.json</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BCFF60FF-683E-4D0D-AD64-F8EA990436A0}"
      DTS:ObjectName="PK_PathDir">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\MasterData\Geo</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{94C22EFD-03FA-4D69-9E71-DD3E3A26E5F0}"
      DTS:ObjectName="PK_Scrape_NumAttempts">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">3</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3C10DDE6-2159-423B-ACE5-34B851074897}"
      DTS:ObjectName="PK_Scrape_TimeInterval">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">2000</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{822D886F-7A8A-4EE9-BC8D-90D6622952BA}"
      DTS:ObjectName="PK_SourceContext">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">MDM - Geo</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{231DD907-626D-4D5A-B262-178977D4A536}"
      DTS:ObjectName="PK_SourceID">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Web</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AEA3B55-2EF9-499A-9177-B0A0EDBA4DEB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[$Project::PR_SQLServer] + &quot;;Initial Catalog=CustomerDWH;Provider=SQLNCLI11.1;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=LU-GZMRLS3\SQL01P\prod;Initial Catalog=CustomerDWH;Provider=SQLNCLI11.1;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AB89C22-D37F-4804-B5B6-D5F8F973C7CB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;References.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_FileName">
      <DTS:VariableValue
        DTS:DataType="8">References.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD680840-82DD-4FD8-AB0C-10B124E7B373}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="V_Flag_Load">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{400D041A-72E5-4908-B6F4-B54047712290}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;[{\&quot;Key\&quot;:\&quot;FileName\&quot;,\&quot;Value\&quot;:\&quot;&quot; + @[User::V_FileName] + &quot;\&quot;}]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_JSONParam">
      <DTS:VariableValue
        DTS:DataType="8">[{"Key":"FileName","Value":"References.json"}]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4960548-CCA8-4E03-89DF-8BA471194716}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + &quot;\\&quot; + @[User::V_FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\MasterData\Geo\References.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{79C9CF58-7359-4C10-A4E2-7839AB6223B6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + @[$Project::PR_PathFolder_Rejected] + &quot;\\&quot; + REPLACE( @[User::V_FileName],  &quot;.&quot; + RIGHT(@[User::V_FileName], LEN(@[User::V_FileName]) - FINDSTRING(@[User::V_FileName], &quot;.&quot;, 1)), &quot;@&quot; ) + SUBSTRING((DT_WSTR, 50) GETDATE(), 1, 4) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) MONTH(GETDATE()), 2) + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DAY(GETDATE()), 2) + &quot;_&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;hh&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;mi&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;ss&quot;, GETDATE()), 2) + &quot;.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile_Archive_Fail">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\MasterData\Geo\Rejected\References@20250102_153408.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A43286DD-A69C-4A5F-BAE8-554135418911}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::V_PathFolder_Full] + @[$Project::PR_PathFolder_Processed] + &quot;\\&quot; + REPLACE( @[User::V_FileName],  &quot;.&quot; + RIGHT(@[User::V_FileName], LEN(@[User::V_FileName]) - FINDSTRING(@[User::V_FileName], &quot;.&quot;, 1)), &quot;@&quot; ) + SUBSTRING((DT_WSTR, 50) GETDATE(), 1, 4) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) MONTH(GETDATE()), 2) + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DAY(GETDATE()), 2) + &quot;_&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;hh&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;mi&quot;, GETDATE()), 2) +  RIGHT(&quot;0&quot; + (DT_WSTR, 2) DATEPART(&quot;ss&quot;, GETDATE()), 2) + &quot;.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFile_Archive_Success">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\MasterData\Geo\Processed\References@20250102_153408.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BE12E39E-2F24-40F4-B169-96776A7F22BB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::PR_PathDir_Root] + &quot;\\&quot; + @[$Project::ENV] +  &quot;\\&quot; + &quot;Input&quot; +  @[$Package::PK_PathDir]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_PathFolder_Full">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\HamedVAHEB\Documents\Projects\Datasets\CustomerData\PROD\Input\MasterData\Geo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00BAD314-AED9-4F0D-B6DE-B945AE900AD6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="V_RowCount_Errors">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check file existence"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{131f7a23-33fb-4b2d-9069-7377df17b723}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check file existence"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_79e60342595740d39a95b7ebf052d9d0"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::V_PathFile,$Package::PK_Scrape_NumAttempts,$Package::PK_Scrape_TimeInterval"
          ReadWriteVariables="User::V_Flag_Load">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e7cf713ed1274b6da2a49005ad567d92")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e7cf713ed1274b6da2a49005ad567d92")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_e7cf713ed1274b6da2a49005ad567d92
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Retrieve the file path from the SSIS variable
            string filePath = Dts.Variables["User::V_PathFile"].Value.ToString();

            // Retrieve retry parameters from package parameters
            int maxRetries = Convert.ToInt32(Dts.Variables["$Package::PK_Scrape_NumAttempts"].Value);
            int retryInterval = Convert.ToInt32(Dts.Variables["$Package::PK_Scrape_TimeInterval"].Value);

            // Initialize the load flag as false by default
            bool flagLoad = false;

            // Variable for the fireAgain parameter
            bool fireAgain = true;

            for (int attempt = 1; attempt <= maxRetries; attempt++)
            {
                if (File.Exists(filePath))
                {
                    // File exists, set the flag to true and break the loop
                    flagLoad = true;
                    break;
                }
                else
                {
                    // Log a message for debugging purposes
                    Dts.Events.FireInformation(0, "File Check", $"File not found. Retry attempt {attempt} of {maxRetries}.", string.Empty, 0, ref fireAgain);

                    // Wait before retrying (except on the last attempt)
                    if (attempt < maxRetries)
                    {
                        System.Threading.Thread.Sleep(retryInterval);
                    }
                }
            }

            // Update the SSIS variable with the flag's value
            Dts.Variables["User::V_Flag_Load"].Value = flagLoad;

            // Log the final status
            if (flagLoad)
            {
                Dts.Events.FireInformation(0, "File Check", $"File '{filePath}' found.", string.Empty, 0, ref fireAgain);
            }
            else
            {
                Dts.Events.FireWarning(0, "File Check", $"File '{filePath}' does not exist after {maxRetries} retries.", string.Empty, 0);
            }

            // Mark the task as successful regardless of the flag's value
            Dts.TaskResult = (int)ScriptResults.Success;
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_79e60342595740d39a95b7ebf052d9d0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0676c515-824e-4ea6-b255-39837136bdf8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e7cf713ed1274b6da2a49005ad567d92</RootNamespace><AssemblyName>ST_79e60342595740d39a95b7ebf052d9d0</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e7cf713ed1274b6da2a49005ad567d92</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e7cf713ed1274b6da2a49005ad567d92</msb:DisplayName>
    <msb:ProjectId>{D7E082D0-382A-4896-A5DD-CD452968D373}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_79e60342595740d39a95b7ebf052d9d0.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Settings.get_Default():ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Sett" +
    "ings")]

namespace ST_e7cf713ed1274b6da2a49005ad567d92.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e7cf713ed1274b6da2a49005ad567d92.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e7cf713ed1274b6da2a49005ad567d92.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e7cf713ed1274b6da2a49005ad567d92.dll">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
2QABADwA4QCuBUEAwQCjBUYA+QC8BUsA+QD6BVIA6QAWBFUAAQFuBGAA0QD6AmUA+QC1BWoA6QA1
A3EAwQDWBQEAcQCcBAYAiQCcBAYAEQGiAHoAEQHtBYMAkQCcBIkAsQCcBAYACAAUAKMACAAYAKgA
KQBzABABLgALAOgALgATAPEALgAbABABLgAjABkBLgArAEIBLgAzAEIBLgA7AEIBLgBDABkBLgBL
AEgBLgBTAEIBLgBbAF8BQwBjAKgASQBzABABYQB7AKgAYwBrAKgAGwADAAEABAADAAAAeATZAAAA
BgHeAAAAzgXjAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAlSN7bgAAAAAAAAkAAAAE
AAAAAAAAAAAAAACRAGcAAAAAABAAAAAAAAAAAAAAAJoASgMAAAAABAAAAAAAAAAAAAAAkQDrAwAA
AAAQAAAAAAAAAAAAAACaAEAAAAAAAAAAAAABAAAA7QQAAAUAAgAAAAAAAFRvSW50MzIAU1RfZTdj
ZjcxM2VkMTI3NGI2ZGEyYTQ5MDA1YWQ1NjdkOTIAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFRocmVhZABkZWZhdWx0SW5z
dGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBGaXJlV2FybmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZTdjZjcxM2VkMTI3NGI2ZGEyYTQ5MDA1YWQ1
NjdkOTIuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0
TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU2xlZXAAZ2V0X1Jlc291cmNlTWFu
YWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2U3Y2Y3
MTNlZDEyNzRiNmRhMmE0OTAwNWFkNTY3ZDkyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF9lN2NmNzEzZWQxMjc0YjZkYTJhNDkwMDVhZDU2N2Q5Mi5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAQ29udmVydABnZXRfQXNzZW1ibHkARW1wdHkAACFVAHMAZQByADoAOgBWAF8A
UABhAHQAaABGAGkAbABlAAA/JABQAGEAYwBrAGEAZwBlADoAOgBQAEsAXwBTAGMAcgBhAHAAZQBf
AE4AdQBtAEEAdAB0AGUAbQBwAHQAcwAAQSQAUABhAGMAawBhAGcAZQA6ADoAUABLAF8AUwBjAHIA
YQBwAGUAXwBUAGkAbQBlAEkAbgB0AGUAcgB2AGEAbAAAFUYAaQBsAGUAIABDAGgAZQBjAGsAAFNG
AGkAbABlACAAbgBvAHQAIABmAG8AdQBuAGQALgAgAFIAZQB0AHIAeQAgAGEAdAB0AGUAbQBwAHQA
IAB7ADAAfQAgAG8AZgAgAHsAMQB9AC4AACNVAHMAZQByADoAOgBWAF8ARgBsAGEAZwBfAEwAbwBh
AGQAAA1GAGkAbABlACAAJwABEScAIABmAG8AdQBuAGQALgABWUYAaQBsAGUAIAAnAHsAMAB9ACcA
IABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQAIABhAGYAdABlAHIAIAB7ADEAfQAgAHIAZQB0
AHIAaQBlAHMALgABcVMAVABfAGUANwBjAGYANwAxADMAZQBkADEAMgA3ADQAYgA2AGQAYQAyAGEA
NAA5ADAAMAA1AGEAZAA1ADYANwBkADkAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAMUI0V5uqGBBg+XYnZHg4lcABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEI
BwYOCAgCAggEIAASYQQgABJlBSABEmkcAyAAHAMgAA4EAAEIHAQAAQIOBCAAEnUGAAMODhwcAgYO
CiAGAQgODg4IEAIEAAEBCAQgAQEcBgADDg4ODgggBQEIDg4OCAgAARKAiRGAjQUgABKAkQcgAgEO
EoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lN2NmNzEzZWQxMjc0YjZkYTJhNDkwMDVh
ZDU2N2Q5MgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABcMQAAAAAAAAAAAAB2MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaDEA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAHtulSMAAAEAe26VIz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZQA3AGMAZgA3ADEAMwBlAGQAMQAyADcANABiADYAZABhADIAYQA0ADkAMAAwADUA
YQBkADUANgA3AGQAOQAyAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADkAMQAwADkALgAyADgAMgA4ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AZQA3AGMAZgA3ADEAMwBlAGQAMQAyADcANABiADYAZABhADIAYQA0ADkAMAAwADUAYQBk
ADUANgA3AGQAOQAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBlADcAYwBmADcAMQAzAGUAZAAxADIANwA0AGIANgBkAGEAMgBhADQAOQAw
ADAANQBhAGQANQA2ADcAZAA5ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZQA3AGMAZgA3ADEAMwBlAGQAMQAyADcANABiADYAZABhADIAYQA0ADkAMAAw
ADUAYQBkADUANgA3AGQAOQAyAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA5ADEAMAA5AC4AMgA4ADIAOAAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADEAMAA5AC4AMgA4ADIAOAAzAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Retrieve Countries from API Web"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7a4af5bd-7d13-4278-81e7-a4ea2bb55bb3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Retrieve Countries from API Web"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">3,7,OnError,13,OnInformation,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5ffdea03c37349148067a5b51e6e2836"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::V_ConnectionString,User::V_PathFile,$Package::PK_Link">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Http;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_217f790900c140cbb4baf97957982ef2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public async void Main()
        {
            // Ensure TLS 1.2 is used for secure connections
            System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12;

            bool fireAgain = false;

            try
            {
                // Get the file path and URL dynamically
                string filePath = Dts.Variables["User::V_PathFile"].Value.ToString();
                string url = Dts.Variables["$Package::PK_Link"].Value.ToString();

                Dts.Events.FireInformation(0, "Script Task", $"File Path: {filePath}", string.Empty, 0, ref fireAgain);
                Dts.Events.FireInformation(0, "Script Task", $"Fetching data from URL: {url}", string.Empty, 0, ref fireAgain);

                using (HttpClient client = new HttpClient())
                {
                    client.Timeout = TimeSpan.FromMinutes(5); // Set a timeout to avoid interruptions
                    client.DefaultRequestHeaders.ConnectionClose = true; // Ensure the connection is properly closed

                    HttpResponseMessage response = await client.GetAsync(url);
                    response.EnsureSuccessStatusCode(); // Throw an exception if the HTTP status code is not 2xx

                    string jsonResponse = await response.Content.ReadAsStringAsync();

                    // Write the content to the specified file path
                    System.IO.File.WriteAllText(filePath, jsonResponse);

                    Dts.Events.FireInformation(0, "Script Task", "API fetch and file write successful.", string.Empty, 0, ref fireAgain);
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task Error", $"Error: {ex.Message}\nStack Trace: {ex.StackTrace}", null, 0);

                // Call the stored procedure to log the error dynamically
                try
                {
                    using (SqlConnection conn = new SqlConnection(Dts.Connections["YourDatabaseConnectionManager"].ConnectionString))
                    {
                        conn.Open();
                        using (SqlCommand cmd = new SqlCommand("EXEC [tech].[usp_LogWarningDynamic] @WarningID, @SourceID, @SourceContext, @CreatedBy, @DynamicParams", conn))
                        {
                            cmd.Parameters.AddWithValue("@WarningID", 5); // Assuming WarningID for data retrieval error is 5
                            cmd.Parameters.AddWithValue("@SourceID", "API");
                            cmd.Parameters.AddWithValue("@SourceContext", "Data Retrieval");
                            cmd.Parameters.AddWithValue("@CreatedBy", Guid.NewGuid()); // Replace with actual package ID if needed

                            // Construct DynamicParams as JSON
                            string dynamicParams = $"[{{\"Key\":\"SourceObject\",\"Value\":\"{Dts.Variables["$Package::PK_Link"].Value}\"}},{{\"Key\":\"ErrorMessage\",\"Value\":\"{ex.Message}\"}}]";
                            cmd.Parameters.AddWithValue("@DynamicParams", dynamicParams);

                            cmd.ExecuteNonQuery();
                        }
                    }

                    Dts.Events.FireInformation(0, "Script Task", "Error logged successfully using stored procedure.", string.Empty, 0, ref fireAgain);
                }
                catch (Exception logEx)
                {
                    Dts.Events.FireError(0, "Script Task Error", $"Failed to log error. Log Error: {logEx.Message}", null, 0);
                }

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }












        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_5ffdea03c37349148067a5b51e6e2836.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{35A540AE-9BD8-4E48-B1BE-D610C22D9816}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_217f790900c140cbb4baf97957982ef2</RootNamespace><AssemblyName>ST_5ffdea03c37349148067a5b51e6e2836</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Net.Http" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_217f790900c140cbb4baf97957982ef2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_217f790900c140cbb4baf97957982ef2</msb:DisplayName>
    <msb:ProjectId>{94E32873-469A-45CD-B7C0-E794B7DCD18F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5ffdea03c37349148067a5b51e6e2836.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Settings.get_Default():ST_217f790900c140cbb4baf97957982ef2.Properties.Sett" +
    "ings")]

namespace ST_217f790900c140cbb4baf97957982ef2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_217f790900c140cbb4baf97957982ef2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_217f790900c140cbb4baf97957982ef2")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_217f790900c140cbb4baf97957982ef2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_217f790900c140cbb4baf97957982ef2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_217f790900c140cbb4baf97957982ef2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_217f790900c140cbb4baf97957982ef2.dll">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
AACGAOwFBgABAIcgAAAAAIYYPwcGAAEAjyAAAAAAgxg/BwYAAQCXIAAAAACTCM8G7gEBAMMgAAAA
AJMISgLzAQEAyiAAAAAAkwhWAvkBAQDSIAAAAACWCAIJAAICANkgAAAAAIYYPwcGAAIA4SAAAAAA
kRhFBwUCAgDwIAAAAADhAXwJBgACALAlAAAAAOEBBgIbAAIAAAABAMwEAAABABYCBgBRAAkAPwcB
ABEAPwcGABkAPwcKACkAPwcQADEAPwcQADkAPwcQAEEAPwcQAEkAPwcQAFEAPwcQAFkAPwcQAGEA
PwcQAGkAPwcGAIEAPwcVAJEAPwcGAKEAfAkGAKEABgIbAOEAPwcGAOkAPwcGABEBPwchANEAwgIt
ANEAagkyAHEAPwcGAPEAPwcGAHkAvAE/AHkAkglHAPkAPwdNABkBPwcGADEBogVzAHEAwQh6AEEB
EQiAAEkBtwWGAFEBtQSNAPEAAQWRAEEB1wiVAGEB4gibAGEBrwmhAFkB8QWkANkAPwcGAGkBHwiv
ANkAcAm2ANkAkAi9AAwAPwfKAHEBpgLQANkA8QDaABQAKgftABwAEQH9ANEA+gABARwAHQkXAbEA
XQEcAbEAUgkhAYkB3wAnASQAKgftACwAEQH9ACwAHQkXAZEBhQlHAZkBugIGAEEBDgkBALkAdQGR
ALkAPgGRAGEB4ghNAVkBNQdVAUEBVQheAaEBtwVkAakB7ASRAMEAPwcQALEB4QUGAMkAPwdrAckA
qghyAbkBvwR4AdEBIQGAAWEB6QiGAdkBnwmNAdEAbwaRAdEAJwkGANEABgIbAAgAFACyAQgAGAC3
ASAAawDaAikAmwBBAi4ACwAZAi4AEwAiAi4AGwBBAi4AIwBKAi4AKwBzAi4AMwBzAi4AOwBzAi4A
QwBKAi4ASwB5Ai4AUwBzAi4AWwCQAkMAYwC3AUkAmwBBAmEAcwC3AWMAkwC3AcMAcwC3AWABiwC3
ASgAVQADAAEABAADAAAA0wYJAgAAagIOAgAABgkUAgIABAADAAIABQAFAAEABgAFAAIABwAHAAYA
FAAfAAYAFgAhAMMA5QD2ADABNwEEgAAAAQAAAJQjoFIAAAAAAABQAAAABAAAAAAAAAAAAAAAlwHW
AAAAAAAQAAAAAAAAAAAAAACgAQoFAAAAAAQAAAAAAAAAAAAAAKkBmwYAAAAABAAAAAAAAAAAAAAA
lwHKAAAAAAAEAAAAAAAAAAAAAACXAcAFAAAAABAAAAAAAAAAAAAAAKABowAAAAAAAAAAAAEAAACQ
BwAABQACAAYAAgArADoAXwAMAV8APQEAAAAAADxNYWluPmRfXzAAPD51X18xAE51bGxhYmxlYDEA
VGFza2AxAFRhc2tBd2FpdGVyYDEASW50MzIAPGZpcmVBZ2Fpbj41X18yADw+dV9fMgBTVF8yMTdm
NzkwOTAwYzE0MGNiYjRiYWY5Nzk1Nzk4MmVmMgA8ZmlsZVBhdGg+NV9fMwA8Y2xpZW50PjVfXzQA
PE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAG1zY29ybGliAFJlYWRBc1N0cmluZ0FzeW5jAEdldEFzeW5jAEF3YWl0VW5z
YWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxldGVkAE5ld0d1aWQARGJDb21tYW5kAFNxbENvbW1h
bmQAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NTdGF0dXNDb2Rl
AGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNo
aW5lAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UAc2V0X0Nvbm5lY3Rpb25DbG9zZQBEaXNwb3NlAENyZWF0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFfX3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGlu
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAQWRkV2l0aFZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzIxN2Y3OTA5MDBjMTQwY2JiNGJhZjk3OTU3OTgyZWYyLmRsbABzZXRfU2VjdXJpdHlQ
cm90b2NvbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBUaW1lU3BhbgBPcGVuAFNj
cmlwdE1haW4ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25u
ZWN0aW9uAFNxbENvbm5lY3Rpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0
dXJlSW5mbwBTeXN0ZW0uTmV0Lkh0dHAAQXN5bmNWb2lkTWV0aG9kQnVpbGRlcgA8PnRfX2J1aWxk
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5h
Z2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3FsUGFyYW1ldGVyAEdldEF3YWl0ZXIARmlyZUVycm9y
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzIxN2Y3OTA5MDBjMTQwY2JiNGJhZjk3OTU3OTgy
ZWYyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8yMTdm
NzkwOTAwYzE0MGNiYjRiYWY5Nzk1Nzk4MmVmMi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMARnJv
bU1pbnV0ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAZ2V0X0Nv
bm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRf
RGVmYXVsdFJlcXVlc3RIZWFkZXJzAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3Jp
cHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAU3lzdGVtLk5ldABnZXRf
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABHZXRSZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNx
bENsaWVudABIdHRwQ2xpZW50AGdldF9Db250ZW50AEh0dHBDb250ZW50AFN0YXJ0AHNldF9UaW1l
b3V0AE1vdmVOZXh0AFdyaXRlQWxsVGV4dABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AEVt
cHR5AAAAAABxUwBUAF8AMgAxADcAZgA3ADkAMAA5ADAAMABjADEANAAwAGMAYgBiADQAYgBhAGYA
OQA3ADkANQA3ADkAOAAyAGUAZgAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAhVQBzAGUAcgA6ADoAVgBfAFAAYQB0AGgARgBpAGwAZQAAIyQAUABhAGMAawBhAGcA
ZQA6ADoAUABLAF8ATABpAG4AawAAF1MAYwByAGkAcAB0ACAAVABhAHMAawAAF0YAaQBsAGUAIABQ
AGEAdABoADoAIAAAMUYAZQB0AGMAaABpAG4AZwAgAGQAYQB0AGEAIABmAHIAbwBtACAAVQBSAEwA
OgAgAABJQQBQAEkAIABmAGUAdABjAGgAIABhAG4AZAAgAGYAaQBsAGUAIAB3AHIAaQB0AGUAIABz
AHUAYwBjAGUAcwBzAGYAdQBsAC4AACNTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIABFAHIAcgBvAHIA
AA9FAHIAcgBvAHIAOgAgAAAdCgBTAHQAYQBjAGsAIABUAHIAYQBjAGUAOgAgAAA7WQBvAHUAcgBE
AGEAdABhAGIAYQBzAGUAQwBvAG4AbgBlAGMAdABpAG8AbgBNAGEAbgBhAGcAZQByAACAy0UAWABF
AEMAIABbAHQAZQBjAGgAXQAuAFsAdQBzAHAAXwBMAG8AZwBXAGEAcgBuAGkAbgBnAEQAeQBuAGEA
bQBpAGMAXQAgAEAAVwBhAHIAbgBpAG4AZwBJAEQALAAgAEAAUwBvAHUAcgBjAGUASQBEACwAIABA
AFMAbwB1AHIAYwBlAEMAbwBuAHQAZQB4AHQALAAgAEAAQwByAGUAYQB0AGUAZABCAHkALAAgAEAA
RAB5AG4AYQBtAGkAYwBQAGEAcgBhAG0AcwAAFUAAVwBhAHIAbgBpAG4AZwBJAEQAABNAAFMAbwB1
AHIAYwBlAEkARAAAB0EAUABJAAAdQABTAG8AdQByAGMAZQBDAG8AbgB0AGUAeAB0AAAdRABhAHQA
YQAgAFIAZQB0AHIAaQBlAHYAYQBsAAAVQABDAHIAZQBhAHQAZQBkAEIAeQAAgJ9bAHsAewAiAEsA
ZQB5ACIAOgAiAFMAbwB1AHIAYwBlAE8AYgBqAGUAYwB0ACIALAAiAFYAYQBsAHUAZQAiADoAIgB7
ADAAfQAiAH0AfQAsAHsAewAiAEsAZQB5ACIAOgAiAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACIA
LAAiAFYAYQBsAHUAZQAiADoAIgB7ADEAfQAiAH0AfQBdAAAdQABEAHkAbgBhAG0AaQBjAFAAYQBy
AGEAbQBzAABjRQByAHIAbwByACAAbABvAGcAZwBlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwA
eQAgAHUAcwBpAG4AZwAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUALgAAQUYAYQBp
AGwAZQBkACAAdABvACAAbABvAGcAIABlAHIAcgBvAHIALgAgAEwAbwBnACAARQByAHIAbwByADoA
IAAAAAAANQrnw6A/EEav1S4VUGaZfwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESPQUgAQESUQYg
AQERgIUEBwERGAQAABFpBzABAQEQHgAECgERGAcAARI9EYCRBSAAEoCVByACAQ4SgJUdBwwIEggO
DhURVQESWRURVQEOEl0SYRJlDhJdEl0GAAEBEYCdBSAAEoChBSAAEoClBiABEoCpHAMgABwDIAAO
BSAAEoCtBQACDg4OAgYOCiAGAQgODg4IEAIGAAERgLUNBiABARGAtQUgABKAuQYVEYC9AQIFIAEB
EwAJIAEBFRGAvQECCiABFRKAwQESWQ4HFRKAwQESWQggABURVQETAAYVEVUBElkDIAACCjACAgEQ
HgAQHgEKCgIVEVUBElkRGAQgABMABCAAElkFIAASgMUIIAAVEoDBAQ4GFRKAwQEOBRURVQEOCQoC
FRFVAQ4RGAUAAgEODgcABA4ODg4OCCAFAggODg4IBSAAEoDRBiABEoDVHAYgAgEOEmEFIAASgN0H
IAISgOUOHAUAABGA6QYAAw4OHBwDIAAIBSABARJdCLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6
BAAAAAAEAQAAAAMGEn0EBhKAgQMGEhACBggDBhEUAwYRaQMGEggCBgIDBhJtBwYVEVUBElkGBhUR
VQEOBAAAEn0FAAASgIEGAAEBEoCBBAAAEhADAAABBAgAEn0FCAASgIEECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMjE3Zjc5MDkwMGMx
NDBjYmI0YmFmOTc5NTc5ODJlZjIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0Ljc+AQA5U1RfMjE3Zjc5MDkwMGMxNDBjYmI0YmFmOTc5NTc5ODJlZjIuU2NyaXB0
TWFpbis8TWFpbj5kX18wAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAABD8AAAAAAAAAAAAAHj8AAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAABA/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAoFKUIwAAAQCgUpQjPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAyADEANwBmADcAOQAwADkAMAAwAGMAMQA0ADAAYwBiAGIANABiAGEAZgA5ADcAOQA1ADcAOQA4
ADIAZQBmADIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAxADAA
OAAuADIAMQAxADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAy
ADEANwBmADcAOQAwADkAMAAwAGMAMQA0ADAAYwBiAGIANABiAGEAZgA5ADcAOQA1ADcAOQA4ADIA
ZQBmADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADIAMQA3AGYANwA5ADAAOQAwADAAYwAxADQAMABjAGIAYgA0AGIAYQBmADkANwA5ADUA
NwA5ADgAMgBlAGYAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwAyADEANwBmADcAOQAwADkAMAAwAGMAMQA0ADAAYwBiAGIANABiAGEAZgA5ADcAOQA1ADcA
OQA4ADIAZQBmADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADkAMQAwADgALgAyADEAMQA1ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADkAMQAwADgALgAyADEAMQA1ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{852fb53e-562f-4ba0-b79b-d7300b7c47ea}"
      DTS:From="Package\Retrieve Countries from API Web"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check file existence" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,41"
          Id="Package\Check file existence"
          TopLeft="240.142856913258,132.647058862407" />
        <NodeLayout
          Size="233,41"
          Id="Package\Retrieve Countries from API Web"
          TopLeft="208.785714438527,60" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="325.797619009226,101.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3137255290733"
              Start="0,0"
              End="0,23.8137255290733">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8137255290733" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>